package TwoSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem17.HashMap(intArray45, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem17.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem22.TwoPointer(intArray58, (int) (short) -1);
        int[] intArray66 = twoSumProblem7.HashMap(intArray64, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem67.HashMap(intArray76, 100);
        int[] intArray80 = twoSumProblem7.BruteForce(intArray78, (int) 'a');
        int[] intArray82 = twoSumProblem6.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (-1));
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem25.HashMap(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem88 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        int[] intArray93 = twoSumProblem88.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem53.HashMap(intArray91, 0);
        int[] intArray97 = twoSumProblem25.HashMap(intArray91, 100);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, 0);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem28.HashMap(intArray66, 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, 100);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray75 = twoSumProblem0.BruteForce(intArray73, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem15.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem0.TwoPointer(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem60.BruteForce(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray74, (int) '#');
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.HashMap(intArray79, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) (short) 10);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem46.HashMap(intArray88, (int) (short) 100);
        int[] intArray96 = twoSumProblem45.BruteForce(intArray94, 1);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem20.BruteForce(intArray53, (int) (short) -1);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) (short) 100);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem54.BruteForce(intArray91, (-1));
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (byte) 10);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem54.BruteForce(intArray68, (int) (byte) 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray68, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray82 = twoSumProblem44.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem43.HashMap(intArray80, (int) (byte) 1);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem30.HashMap(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem30.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem15.TwoPointer(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        int[] intArray79 = twoSumProblem15.HashMap(intArray77, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        java.lang.Class<?> wildcardClass66 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray72, (int) (short) 1);
        java.lang.Class<?> wildcardClass79 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        java.lang.Class<?> wildcardClass44 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray77 = twoSumProblem0.HashMap(intArray75, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.BruteForce(intArray58, (int) (short) 1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
        java.lang.Class<?> wildcardClass63 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.BruteForce(intArray70, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray59, (int) ' ');
        java.lang.Class<?> wildcardClass62 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) -1);
        java.lang.Class<?> wildcardClass61 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.BruteForce(intArray40, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem43.TwoPointer(intArray81, (int) (short) -1);
        int[] intArray87 = twoSumProblem25.BruteForce(intArray85, 0);
        int[] intArray93 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray95 = twoSumProblem25.HashMap(intArray93, (-1));
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem57.HashMap(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.HashMap(intArray95, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray3 = twoSumProblem0.HashMap(intArray1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem56.BruteForce(intArray78, (-1));
        int[] intArray82 = twoSumProblem0.HashMap(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, (-1));
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem57.HashMap(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem57.HashMap(intArray80, 0);
        int[] intArray86 = twoSumProblem42.TwoPointer(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem71.TwoPointer(intArray93, (int) (short) 0);
        int[] intArray97 = twoSumProblem59.BruteForce(intArray95, (int) '#');
        int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem52.TwoPointer(intArray88, (int) (short) -1);
        int[] intArray96 = twoSumProblem37.HashMap(intArray94, (int) (byte) 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 100);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) (short) 10);
        java.lang.Class<?> wildcardClass68 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem41.BruteForce(intArray59, (int) (short) 0);
        int[] intArray67 = twoSumProblem32.HashMap(intArray65, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem32.BruteForce(intArray84, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem32.TwoPointer(intArray90, 0);
        int[] intArray96 = twoSumProblem17.BruteForce(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem20.HashMap(intArray60, (int) '4');
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem37.BruteForce(intArray69, 1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray69, (int) 'a');
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.HashMap(intArray76, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        java.lang.Class<?> wildcardClass37 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem47.HashMap(intArray76, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem47.HashMap(intArray87, (int) '4');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (short) -1);
        java.lang.Class<?> wildcardClass65 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem50.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem50.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        java.lang.Class<?> wildcardClass70 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem51.HashMap(intArray74, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem79.HashMap(intArray88, 100);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray88, (-1));
        int[] intArray94 = twoSumProblem0.HashMap(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem54.BruteForce(intArray68, (int) (byte) 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray68, (int) (byte) 100);
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem50.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem1.TwoPointer(intArray77, (int) ' ');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (-1));
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        java.lang.Class<?> wildcardClass61 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = intArray14.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem7.HashMap(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem7.HashMap(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem71.HashMap(intArray84, (int) '#');
        int[] intArray92 = twoSumProblem35.HashMap(intArray90, (-1));
        int[] intArray94 = twoSumProblem7.HashMap(intArray92, 10);
        int[] intArray96 = twoSumProblem6.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 10);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem32.BruteForce(intArray80, (int) (short) 100);
        int[] intArray88 = twoSumProblem15.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem6.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (-1));
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, 1);
        java.lang.Class<?> wildcardClass63 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem50.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem50.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray84, (int) (short) -1);
        int[] intArray94 = twoSumProblem42.BruteForce(intArray84, (int) (short) 10);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem47.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        int[] intArray80 = twoSumProblem0.HashMap(intArray78, 1);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.BruteForce(intArray81, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem47.BruteForce(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.BruteForce(intArray79, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem46.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem40.BruteForce(intArray58, (int) (short) 0);
        int[] intArray66 = twoSumProblem31.HashMap(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem31.HashMap(intArray80, 1);
        int[] intArray90 = twoSumProblem25.HashMap(intArray80, 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray80, 1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) 'a');
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        int[] intArray69 = twoSumProblem35.HashMap(intArray65, (int) (byte) -1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray65, (int) (short) 10);
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.BruteForce(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem9.HashMap(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem38.HashMap(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem38.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = twoSumProblem37.BruteForce(intArray86, 1);
        int[] intArray90 = twoSumProblem9.HashMap(intArray86, 1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.HashMap(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray40 = twoSumProblem29.HashMap(intArray38, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        int[] intArray77 = twoSumProblem29.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = twoSumProblem28.BruteForce(intArray77, 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray77, 1);
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        java.lang.Class<?> wildcardClass51 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.TwoPointer(intArray66, (int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, 0);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.HashMap(intArray58, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.BruteForce(intArray83, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        java.lang.Class<?> wildcardClass62 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        int[] intArray64 = twoSumProblem18.BruteForce(intArray56, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem18.BruteForce(intArray76, (int) (short) -1);
        int[] intArray80 = twoSumProblem1.TwoPointer(intArray78, (int) (short) 100);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 10);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem49.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem34.TwoPointer(intArray79, (int) '#');
        int[] intArray87 = twoSumProblem33.TwoPointer(intArray79, (int) (byte) -1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem90 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        int[] intArray95 = twoSumProblem90.BruteForce(intArray93, (int) '#');
        int[] intArray97 = twoSumProblem89.HashMap(intArray93, (int) (short) 100);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray93, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem33.TwoPointer(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem33.BruteForce(intArray88, (int) '4');
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem0.TwoPointer(intArray61, 0);
        java.lang.Class<?> wildcardClass64 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass18 = intArray17.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem72.HashMap(intArray87, (int) (byte) 100);
        int[] intArray91 = twoSumProblem57.HashMap(intArray87, (int) (byte) -1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray47 = twoSumProblem36.HashMap(intArray45, 100);
        int[] intArray49 = twoSumProblem21.TwoPointer(intArray47, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem50.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray80 = twoSumProblem21.HashMap(intArray76, 100);
        int[] intArray82 = twoSumProblem6.HashMap(intArray80, (int) (short) 10);
        int[] intArray87 = new int[] { (byte) 100, (byte) 1, '4', (byte) 100 };
        int[] intArray89 = twoSumProblem6.BruteForce(intArray87, (int) (short) -1);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray87, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        java.lang.Class<?> wildcardClass75 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem43.BruteForce(intArray87, (int) (byte) 0);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (short) 10);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem9.HashMap(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem37.HashMap(intArray46, 100);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray46, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray89, (int) (short) -1);
        int[] intArray95 = twoSumProblem9.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) (short) 10);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 10);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        java.lang.Class<?> wildcardClass29 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem72.HashMap(intArray87, (int) (byte) 100);
        int[] intArray91 = twoSumProblem57.HashMap(intArray87, (int) (byte) -1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem85.HashMap(intArray94, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem25.BruteForce(intArray80, (int) '4');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray80, 1);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, 0);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem35.BruteForce(intArray74, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) (short) -1);
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = intArray37.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem35.TwoPointer(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem17.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.HashMap(intArray93, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem45.BruteForce(intArray78, (int) (short) -1);
        int[] intArray88 = twoSumProblem25.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem49.BruteForce(intArray77, (int) (byte) 10);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray77, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        java.lang.Class<?> wildcardClass56 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem33.BruteForce(intArray51, (int) (short) 0);
        int[] intArray59 = twoSumProblem24.HashMap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem24.BruteForce(intArray76, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem24.TwoPointer(intArray82, 0);
        int[] intArray88 = twoSumProblem9.BruteForce(intArray86, (int) '4');
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray93 = new int[] { (short) 10, (byte) -1, '4', (byte) 1, 'a', 0 };
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, 100);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 52, 1, 97, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem32.HashMap(intArray84, (int) (short) 100);
        int[] intArray88 = twoSumProblem31.TwoPointer(intArray86, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem91 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray94 = new int[] { (short) -1, (short) 0 };
        int[] intArray96 = twoSumProblem91.BruteForce(intArray94, (int) '#');
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        java.lang.Class<?> wildcardClass57 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        int[] intArray81 = twoSumProblem37.TwoPointer(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.TwoPointer(intArray86, (int) '#');
        int[] intArray92 = twoSumProblem0.HashMap(intArray90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray80 = new int[] { 'a', (short) 0, 10 };
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 0, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem41.TwoPointer(intArray79, (int) (short) -1);
        int[] intArray85 = twoSumProblem6.TwoPointer(intArray79, (int) (byte) 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray79, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) '4');
        java.lang.Class<?> wildcardClass76 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem37.HashMap(intArray79, 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray77 = twoSumProblem0.BruteForce(intArray75, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.TwoPointer(intArray35, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem28.HashMap(intArray66, 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, 100);
        int[] intArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        int[] intArray77 = twoSumProblem31.BruteForce(intArray75, (int) (byte) 0);
        int[] intArray79 = twoSumProblem6.TwoPointer(intArray75, (int) ' ');
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, 10);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        java.lang.Class<?> wildcardClass42 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) (short) 10);
        java.lang.Class<?> wildcardClass68 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem85.HashMap(intArray94, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem33.HashMap(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem33.TwoPointer(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray83, (int) (short) 100);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem41.BruteForce(intArray59, (int) (short) 0);
        int[] intArray67 = twoSumProblem32.HashMap(intArray65, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem32.BruteForce(intArray84, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem32.TwoPointer(intArray90, 0);
        int[] intArray96 = twoSumProblem17.BruteForce(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem32.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray78 = twoSumProblem15.BruteForce(intArray76, (int) '4');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem90 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        int[] intArray95 = twoSumProblem90.BruteForce(intArray93, (int) '#');
        int[] intArray97 = twoSumProblem81.TwoPointer(intArray93, (int) '#');
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem17.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem17.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray80 = new int[] { 'a', (short) 0, 10 };
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem83.HashMap(intArray92, 100);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray92, (int) '#');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 0, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem15.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem0.TwoPointer(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem60.BruteForce(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray74, (int) '#');
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.BruteForce(intArray79, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray53, (int) (short) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, 0);
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        java.lang.Class<?> wildcardClass52 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        int[] intArray46 = new int[] { (short) 1, (byte) 1, (byte) 0 };
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (short) -1);
        java.lang.Class<?> wildcardClass49 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 1);
        java.lang.Class<?> wildcardClass75 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, (int) '4');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) 'a');
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem22.TwoPointer(intArray58, (int) (short) -1);
        int[] intArray66 = twoSumProblem7.HashMap(intArray64, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem67.HashMap(intArray76, 100);
        int[] intArray80 = twoSumProblem7.BruteForce(intArray78, (int) 'a');
        int[] intArray82 = twoSumProblem6.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) '4');
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem53.BruteForce(intArray92, 0);
        int[] intArray96 = twoSumProblem18.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem50.BruteForce(intArray78, (int) (byte) 10);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, 1);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem42.BruteForce(intArray75, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) 'a');
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem58.BruteForce(intArray72, (int) (byte) 0);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) '4');
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem0.HashMap(intArray74, (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem0.HashMap(intArray74, (int) (short) -1);
        java.lang.Class<?> wildcardClass83 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray59, (int) ' ');
        java.lang.Class<?> wildcardClass62 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) (byte) 1);
        int[] intArray75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray77 = twoSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        int[] intArray74 = twoSumProblem1.HashMap(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.BruteForce(intArray79, 100);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (short) 10);
        java.lang.Class<?> wildcardClass47 = intArray44.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        int[] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem45.HashMap(intArray54, 100);
        int[] intArray58 = twoSumProblem30.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray60 = twoSumProblem1.HashMap(intArray56, 100);
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray56, (int) (short) 100);
        java.lang.Class<?> wildcardClass63 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray93 = new int[] { (short) 10, (byte) -1, '4', (byte) 1, 'a', 0 };
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 52, 1, 97, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        int[] intArray83 = twoSumProblem37.BruteForce(intArray75, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem85.HashMap(intArray89, (int) (short) 100);
        int[] intArray95 = twoSumProblem84.HashMap(intArray93, 100);
        int[] intArray97 = twoSumProblem37.HashMap(intArray93, 0);
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray93, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.BruteForce(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.TwoPointer(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem44.BruteForce(intArray91, (int) '#');
        int[] intArray99 = twoSumProblem0.HashMap(intArray91, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray80 = new int[] { 'a', (short) 0, 10 };
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem83.HashMap(intArray92, 100);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray92, (int) '#');
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 0, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        java.lang.Class<?> wildcardClass76 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem35.TwoPointer(intArray59, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem35.BruteForce(intArray87, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem67.TwoPointer(intArray89, (int) (short) 0);
        int[] intArray93 = twoSumProblem55.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem18.TwoPointer(intArray68, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray68, (-1));
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem56.HashMap(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem56.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray86 = twoSumProblem47.TwoPointer(intArray84, (-1));
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem17.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem17.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) -1);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem17.HashMap(intArray45, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem17.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem37.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 10);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray47 = twoSumProblem0.HashMap(intArray45, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        java.lang.Class<?> wildcardClass33 = intArray28.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.BruteForce(intArray37, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.BruteForce(intArray57, (int) (short) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray57, 0);
        java.lang.Class<?> wildcardClass62 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        java.lang.Class<?> wildcardClass78 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem49.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem34.TwoPointer(intArray79, (int) '#');
        int[] intArray87 = twoSumProblem33.TwoPointer(intArray79, (int) (byte) -1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray79, 10);
        java.lang.Class<?> wildcardClass90 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray69, 100);
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem43.HashMap(intArray72, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem43.HashMap(intArray83, (int) '4');
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) (short) 10);
        java.lang.Class<?> wildcardClass68 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        java.lang.Class<?> wildcardClass39 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.TwoPointer(intArray66, (int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 1);
        java.lang.Class<?> wildcardClass75 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem42.HashMap(intArray71, (int) (short) 10);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray71, 0);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray90 = new int[] { 'a', 'a', (byte) 1, (byte) 10, (short) 1 };
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 97, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem47.BruteForce(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.TwoPointer(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem43.HashMap(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem77.HashMap(intArray90, (int) '#');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray61, 1);
        java.lang.Class<?> wildcardClass66 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray61, 1);
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem35.TwoPointer(intArray59, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem64.HashMap(intArray87, 0);
        int[] intArray93 = twoSumProblem35.BruteForce(intArray87, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray87, 0);
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.HashMap(intArray55, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem17.HashMap(intArray45, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem17.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray83, (int) '#');
        int[] intArray93 = new int[] { (short) 100, 'a', (short) 100 };
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[100, 97, 100]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) '4');
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.BruteForce(intArray76, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) (short) -1);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, 0);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem35.BruteForce(intArray74, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) (short) -1);
        java.lang.Class<?> wildcardClass79 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem47.HashMap(intArray76, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem47.HashMap(intArray87, (int) '4');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (int) '4');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (short) 10);
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.BruteForce(intArray44, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray86 = twoSumProblem48.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem47.HashMap(intArray84, (int) (byte) 1);
        int[] intArray90 = twoSumProblem29.BruteForce(intArray88, (-1));
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem57.HashMap(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem57.HashMap(intArray80, 0);
        int[] intArray86 = twoSumProblem42.TwoPointer(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        java.lang.Class<?> wildcardClass51 = intArray44.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem18.TwoPointer(intArray68, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray68, (-1));
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, 0);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.TwoPointer(intArray70, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        java.lang.Class<?> wildcardClass47 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        java.lang.Class<?> wildcardClass40 = intArray37.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem43.HashMap(intArray92, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        int[] intArray80 = new int[] { 'a', (short) 0, 10 };
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem83.HashMap(intArray92, 100);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray92, (int) '#');
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 0, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem36.BruteForce(intArray58, (-1));
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, 0);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray65 = twoSumProblem0.TwoPointer(intArray63, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        java.lang.Class<?> wildcardClass37 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        int[] intArray46 = twoSumProblem11.HashMap(intArray44, (int) (short) 1);
        int[] intArray48 = twoSumProblem2.HashMap(intArray44, 100);
        int[] intArray50 = twoSumProblem1.BruteForce(intArray44, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem51.BruteForce(intArray79, (int) (byte) 10);
        int[] intArray83 = twoSumProblem1.HashMap(intArray81, 1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem37.TwoPointer(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem36.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (byte) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        java.lang.Class<?> wildcardClass52 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.TwoPointer(intArray81, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem54.BruteForce(intArray85, (int) '#');
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, (int) (byte) 100);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) '4');
        java.lang.Class<?> wildcardClass76 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.BruteForce(intArray40, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem43.TwoPointer(intArray81, (int) (short) -1);
        int[] intArray87 = twoSumProblem25.BruteForce(intArray85, 0);
        int[] intArray93 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray95 = twoSumProblem25.HashMap(intArray93, (-1));
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, (int) '4');
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem72.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem18.HashMap(intArray86, (int) (byte) 100);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem43.HashMap(intArray92, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        int[] intArray68 = twoSumProblem33.HashMap(intArray66, (int) (short) 1);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray68, 0);
        java.lang.Class<?> wildcardClass71 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem29.BruteForce(intArray83, (int) (short) 1);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem47.TwoPointer(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) -1);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem44.HashMap(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem44.HashMap(intArray67, 0);
        int[] intArray73 = twoSumProblem29.TwoPointer(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem12.BruteForce(intArray73, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem85.HashMap(intArray89, (int) (short) 100);
        int[] intArray95 = twoSumProblem76.HashMap(intArray89, (int) '#');
        int[] intArray97 = twoSumProblem12.HashMap(intArray89, (int) (byte) -1);
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray89, (int) ' ');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem32.HashMap(intArray84, (int) (short) 100);
        int[] intArray88 = twoSumProblem31.TwoPointer(intArray86, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        java.lang.Class<?> wildcardClass58 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem72.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (-1));
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        int[] intArray93 = new int[] { (short) 10, (byte) -1, '4', (byte) 1, 'a', 0 };
        int[] intArray95 = twoSumProblem0.HashMap(intArray93, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, -1, 52, 1, 97, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 100);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem29.BruteForce(intArray83, (int) (short) 1);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        int[] intArray84 = twoSumProblem43.BruteForce(intArray82, 0);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem78.HashMap(intArray87, 100);
        int[] intArray91 = twoSumProblem0.HashMap(intArray87, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem37.BruteForce(intArray69, 1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray69, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (-1));
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem30.HashMap(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem30.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem15.TwoPointer(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        int[] intArray79 = twoSumProblem15.HashMap(intArray77, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem58.BruteForce(intArray72, (int) (byte) 0);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) '4');
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem37.HashMap(intArray79, 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem55.HashMap(intArray88, (int) (short) 1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray90, 1);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        java.lang.Class<?> wildcardClass58 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem16.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = twoSumProblem15.BruteForce(intArray64, 1);
        int[] intArray73 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (byte) 10);
        int[] intArray77 = twoSumProblem0.HashMap(intArray73, (int) (short) 1);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.HashMap(intArray78, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[2, 4]");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        int[] intArray65 = twoSumProblem19.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem1.BruteForce(intArray65, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem1.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass89 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem18.HashMap(intArray47, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem18.HashMap(intArray58, (int) '4');
        int[] intArray66 = twoSumProblem0.TwoPointer(intArray58, (int) (short) 100);
        java.lang.Class<?> wildcardClass67 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem29.BruteForce(intArray83, (int) (short) 1);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.BruteForce(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem44.BruteForce(intArray82, (int) '4');
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.BruteForce(intArray57, (int) (short) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray57, 0);
        java.lang.Class<?> wildcardClass62 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem42.BruteForce(intArray73, (int) '#');
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem37.HashMap(intArray78, (int) (short) 10);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass83 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem85.HashMap(intArray89, (int) (short) 100);
        int[] intArray95 = twoSumProblem76.HashMap(intArray89, (int) '#');
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray89, (int) '4');
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem40.HashMap(intArray82, 100);
        int[] intArray88 = twoSumProblem39.BruteForce(intArray82, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        java.lang.Class<?> wildcardClass79 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, 10);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem6.HashMap(intArray55, 1);
        int[] intArray65 = twoSumProblem0.HashMap(intArray55, 10);
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem46.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem40.BruteForce(intArray58, (int) (short) 0);
        int[] intArray66 = twoSumProblem31.HashMap(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem31.HashMap(intArray80, 1);
        int[] intArray90 = twoSumProblem25.HashMap(intArray80, 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray80, 1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray66, 10);
        java.lang.Class<?> wildcardClass69 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, (int) '4');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        java.lang.Class<?> wildcardClass25 = intArray24.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.HashMap(intArray84, (int) (byte) 100);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) ' ');
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.BruteForce(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray40 = twoSumProblem29.HashMap(intArray38, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        int[] intArray77 = twoSumProblem29.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = twoSumProblem28.BruteForce(intArray77, 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray77, 1);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem18.BruteForce(intArray50, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray81, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem55.BruteForce(intArray87, 1);
        int[] intArray93 = twoSumProblem18.HashMap(intArray87, (int) 'a');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray87, (-1));
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem1.TwoPointer(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray88, (int) '#');
        int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        int[] intArray84 = twoSumProblem43.BruteForce(intArray82, 0);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass87 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem37.TwoPointer(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem36.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (byte) 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem59.HashMap(intArray89, (int) (byte) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray38, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem43.TwoPointer(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem6.HashMap(intArray85, 10);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem37.HashMap(intArray78, (int) (short) 10);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass83 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem25.BruteForce(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.BruteForce(intArray80, (int) (short) 0);
        int[] intArray88 = twoSumProblem25.TwoPointer(intArray86, 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        java.lang.Class<?> wildcardClass47 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray74 = new int[] { (byte) 1, (byte) 10, '4', (byte) 100, (byte) 0 };
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, 10);
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 52, 100, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem55.HashMap(intArray85, (int) (byte) -1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        int[] intArray77 = twoSumProblem33.TwoPointer(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem16.BruteForce(intArray77, (int) '4');
        int[] intArray81 = twoSumProblem1.TwoPointer(intArray77, (int) ' ');
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        java.lang.Class<?> wildcardClass84 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem50.HashMap(intArray73, 0);
        int[] intArray79 = twoSumProblem1.TwoPointer(intArray77, (int) ' ');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (-1));
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = twoSumProblem0.TwoPointer(intArray33, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray74 = new int[] { (byte) 1, (byte) 10, '4', (byte) 100, (byte) 0 };
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, 10);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 52, 100, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        int[] intArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray39 = twoSumProblem0.HashMap(intArray37, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        int[] intArray77 = twoSumProblem33.TwoPointer(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem16.BruteForce(intArray77, (int) '4');
        int[] intArray81 = twoSumProblem1.TwoPointer(intArray77, (int) ' ');
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, (int) (short) 0);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray74 = new int[] { (byte) 1, (byte) 10, '4', (byte) 100, (byte) 0 };
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, 10);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 52, 100, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem46.TwoPointer(intArray70, (int) (short) 0);
        int[] intArray76 = twoSumProblem37.TwoPointer(intArray74, (-1));
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray74, (int) 'a');
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem33.BruteForce(intArray51, (int) (short) 0);
        int[] intArray59 = twoSumProblem24.HashMap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem24.BruteForce(intArray76, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem24.TwoPointer(intArray82, 0);
        int[] intArray88 = twoSumProblem9.BruteForce(intArray86, (int) '4');
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem0.HashMap(intArray74, (int) (short) -1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem17.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem17.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass91 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem46.TwoPointer(intArray70, (int) (short) 0);
        int[] intArray76 = twoSumProblem37.TwoPointer(intArray74, (-1));
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray74, (int) 'a');
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem57.HashMap(intArray70, (int) '#');
        int[] intArray78 = twoSumProblem0.HashMap(intArray76, (int) (short) 100);
        java.lang.Class<?> wildcardClass79 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.BruteForce(intArray35, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 100);
        java.lang.Class<?> wildcardClass68 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray93 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray95 = twoSumProblem81.TwoPointer(intArray93, 100);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) ' ');
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.HashMap(intArray70, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem59.HashMap(intArray89, (int) (byte) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem52.HashMap(intArray82, (int) (byte) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray82, 10);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray19 = twoSumProblem0.TwoPointer(intArray17, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem38.HashMap(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem38.HashMap(intArray61, 0);
        int[] intArray67 = twoSumProblem23.TwoPointer(intArray65, (int) (short) 1);
        int[] intArray69 = twoSumProblem6.BruteForce(intArray67, (int) '4');
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) '4');
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem18.BruteForce(intArray82, (int) (byte) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, 100);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.HashMap(intArray56, 0);
        java.lang.Class<?> wildcardClass61 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray90 = new int[] { 'a', 'a', (byte) 1, (byte) 10, (short) 1 };
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 97, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem38.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem32.BruteForce(intArray50, (int) (short) 0);
        int[] intArray58 = twoSumProblem23.HashMap(intArray56, (int) (short) 1);
        int[] intArray60 = twoSumProblem14.HashMap(intArray56, 100);
        int[] intArray62 = twoSumProblem13.BruteForce(intArray56, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem63.BruteForce(intArray91, (int) (byte) 10);
        int[] intArray95 = twoSumProblem13.HashMap(intArray93, 1);
        int[] intArray97 = twoSumProblem12.HashMap(intArray95, 1);
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 100);
        java.lang.Class<?> wildcardClass68 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        int[] intArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray31 = twoSumProblem0.HashMap(intArray29, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.BruteForce(intArray62, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.HashMap(intArray95, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) '#');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = twoSumProblem0.TwoPointer(intArray64, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem25.HashMap(intArray89, 10);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem52.TwoPointer(intArray88, (int) (short) -1);
        int[] intArray96 = twoSumProblem37.HashMap(intArray94, (int) (byte) 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem72.HashMap(intArray87, (int) (byte) 100);
        int[] intArray91 = twoSumProblem57.HashMap(intArray87, (int) (byte) -1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem33.TwoPointer(intArray69, (int) (short) -1);
        int[] intArray77 = twoSumProblem18.HashMap(intArray75, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem78.BruteForce(intArray92, (int) (byte) 0);
        int[] intArray96 = twoSumProblem18.TwoPointer(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem43.BruteForce(intArray76, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 10);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        int[] intArray81 = new int[] { (byte) 100, (byte) 1, '4', (byte) 100 };
        int[] intArray83 = twoSumProblem0.BruteForce(intArray81, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 1, 52, 100]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.BruteForce(intArray78, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem20.BruteForce(intArray83, 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = twoSumProblem0.TwoPointer(intArray66, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem31.TwoPointer(intArray67, (int) (short) -1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.BruteForce(intArray76, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (int) (byte) -1);
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.BruteForce(intArray62, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem46.HashMap(intArray88, (int) (short) 100);
        int[] intArray96 = twoSumProblem45.BruteForce(intArray94, 1);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem71.BruteForce(intArray89, (int) (short) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem43.BruteForce(intArray87, (int) (byte) 0);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (short) 10);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem40.HashMap(intArray82, 100);
        int[] intArray88 = twoSumProblem39.BruteForce(intArray82, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem20.HashMap(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem51.HashMap(intArray74, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem79.HashMap(intArray88, 100);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray88, (-1));
        int[] intArray94 = twoSumProblem0.HashMap(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray62 = twoSumProblem0.TwoPointer(intArray60, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem34.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem19.TwoPointer(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem18.TwoPointer(intArray64, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem18.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, 100);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass95 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.TwoPointer(intArray78, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem50.HashMap(intArray88, 0);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem46.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem40.BruteForce(intArray58, (int) (short) 0);
        int[] intArray66 = twoSumProblem31.HashMap(intArray64, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem31.HashMap(intArray80, 1);
        int[] intArray90 = twoSumProblem25.HashMap(intArray80, 10);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray80, 1);
        java.lang.Class<?> wildcardClass93 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.BruteForce(intArray80, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem88 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        int[] intArray93 = twoSumProblem88.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem87.HashMap(intArray91, (int) (short) 100);
        int[] intArray97 = twoSumProblem62.HashMap(intArray91, (int) (short) 10);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem18.HashMap(intArray47, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem18.HashMap(intArray58, (int) '4');
        int[] intArray66 = twoSumProblem0.TwoPointer(intArray58, (int) (short) 100);
        java.lang.Class<?> wildcardClass67 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.HashMap(intArray56, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = twoSumProblem0.TwoPointer(intArray61, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray93 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray95 = twoSumProblem81.TwoPointer(intArray93, 100);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, (int) ' ');
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.HashMap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem28.BruteForce(intArray58, 0);
        int[] intArray64 = twoSumProblem22.TwoPointer(intArray58, (int) (short) -1);
        int[] intArray66 = twoSumProblem7.HashMap(intArray64, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem67.HashMap(intArray76, 100);
        int[] intArray80 = twoSumProblem7.BruteForce(intArray78, (int) 'a');
        int[] intArray82 = twoSumProblem6.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass67 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem30.HashMap(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem30.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem15.TwoPointer(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        int[] intArray79 = twoSumProblem15.HashMap(intArray77, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray94 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray96 = twoSumProblem82.TwoPointer(intArray94, 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem18.BruteForce(intArray77, (int) (byte) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.HashMap(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = twoSumProblem0.HashMap(intArray64, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, 100);
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 100);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.TwoPointer(intArray49, (int) '#');
        int[] intArray55 = twoSumProblem1.HashMap(intArray49, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem1.BruteForce(intArray64, 10);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (byte) 0);
        java.lang.Class<?> wildcardClass69 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.HashMap(intArray77, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, (int) 'a');
        java.lang.Class<?> wildcardClass66 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, 10);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem52.TwoPointer(intArray88, (int) (short) -1);
        int[] intArray96 = twoSumProblem37.HashMap(intArray94, (int) (byte) 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem72.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem18.HashMap(intArray86, (int) (byte) 100);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem43.HashMap(intArray72, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem43.HashMap(intArray83, (int) '4');
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 100);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem32.HashMap(intArray84, (int) (short) 100);
        int[] intArray88 = twoSumProblem31.TwoPointer(intArray86, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem91 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray94 = new int[] { (short) -1, (short) 0 };
        int[] intArray96 = twoSumProblem91.BruteForce(intArray94, (int) '#');
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem68.HashMap(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem43.BruteForce(intArray81, (int) '4');
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) 'a');
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.HashMap(intArray52, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem53.BruteForce(intArray92, 0);
        int[] intArray96 = twoSumProblem18.TwoPointer(intArray94, (int) (short) -1);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem40.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem34.BruteForce(intArray52, (int) (short) 0);
        int[] intArray60 = twoSumProblem25.HashMap(intArray58, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem25.BruteForce(intArray77, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem25.TwoPointer(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) (byte) -1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem85.HashMap(intArray94, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = twoSumProblem0.BruteForce(intArray33, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        java.lang.Class<?> wildcardClass37 = intArray36.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem56.BruteForce(intArray78, (-1));
        int[] intArray82 = twoSumProblem0.HashMap(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray62 = twoSumProblem0.HashMap(intArray60, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray43 = twoSumProblem32.HashMap(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.TwoPointer(intArray66, (int) (short) 0);
        int[] intArray70 = twoSumProblem32.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem17.HashMap(intArray70, 0);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) (short) 0);
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem40.TwoPointer(intArray85, (int) '#');
        int[] intArray93 = twoSumProblem39.TwoPointer(intArray85, (int) (byte) -1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray85, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        java.lang.Class<?> wildcardClass63 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray53, (int) (short) 10);
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem45.HashMap(intArray54, 100);
        int[] intArray58 = twoSumProblem30.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray60 = twoSumProblem1.HashMap(intArray56, 100);
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray56, (int) (short) 100);
        java.lang.Class<?> wildcardClass63 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem16.HashMap(intArray25, 100);
        int[] intArray29 = twoSumProblem1.TwoPointer(intArray27, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray33, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem38.TwoPointer(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem1.HashMap(intArray80, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.TwoPointer(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem0.HashMap(intArray90, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray69, 100);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.HashMap(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem19.HashMap(intArray34, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem19.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem1.BruteForce(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem1.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem30.HashMap(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem30.HashMap(intArray53, 0);
        int[] intArray59 = twoSumProblem15.TwoPointer(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        int[] intArray79 = twoSumProblem15.HashMap(intArray77, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray94 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray96 = twoSumProblem82.TwoPointer(intArray94, 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem56.HashMap(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.TwoPointer(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem56.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem55.HashMap(intArray92, (int) (byte) 1);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem0.HashMap(intArray40, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem47.TwoPointer(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) -1);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.TwoPointer(intArray86, (int) '#');
        int[] intArray92 = twoSumProblem0.HashMap(intArray90, (int) (byte) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray42, (int) (short) -1);
        int[] intArray52 = twoSumProblem0.BruteForce(intArray42, (int) (short) 10);
        java.lang.Class<?> wildcardClass53 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem71.BruteForce(intArray89, (int) (short) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) (short) 1);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.BruteForce(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem44.BruteForce(intArray82, (int) '4');
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem62.HashMap(intArray77, (int) (byte) 100);
        int[] intArray81 = twoSumProblem47.HashMap(intArray77, (int) (byte) -1);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, (int) (byte) 100);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem29.HashMap(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) (short) 0);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass67 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (byte) 10);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem40.HashMap(intArray82, 100);
        int[] intArray88 = twoSumProblem39.BruteForce(intArray82, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (-1), (short) 10, (byte) 0 };
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -1, 10, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem0.TwoPointer(intArray50, (-1));
        java.lang.Class<?> wildcardClass53 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem72.BruteForce(intArray94, (-1));
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (-1));
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem37.BruteForce(intArray65, (int) (byte) 10);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray65, (-1));
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.HashMap(intArray70, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem25.BruteForce(intArray57, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem62.TwoPointer(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem25.TwoPointer(intArray90, 0);
        int[] intArray94 = twoSumProblem0.HashMap(intArray90, (int) '4');
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem18.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, 0);
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem37.BruteForce(intArray65, (int) (byte) 10);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray65, (-1));
        java.lang.Class<?> wildcardClass70 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray63, 0);
        java.lang.Class<?> wildcardClass70 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem10.TwoPointer(intArray46, (int) (short) -1);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem1.HashMap(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem1.TwoPointer(intArray84, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem85.HashMap(intArray89, (int) (short) 100);
        int[] intArray95 = twoSumProblem76.HashMap(intArray89, (int) '#');
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray89, (int) '4');
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.TwoPointer(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem43.HashMap(intArray73, 10);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray73, 1);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.BruteForce(intArray27, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem45.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem39.TwoPointer(intArray75, (int) (short) -1);
        int[] intArray83 = twoSumProblem30.HashMap(intArray81, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem30.HashMap(intArray92, (int) (byte) 0);
        int[] intArray96 = twoSumProblem12.TwoPointer(intArray94, (int) ' ');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        int[] intArray65 = twoSumProblem19.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem1.BruteForce(intArray65, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem1.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) '4');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem33.TwoPointer(intArray69, (int) (short) -1);
        int[] intArray77 = twoSumProblem18.HashMap(intArray75, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem78.BruteForce(intArray92, (int) (byte) 0);
        int[] intArray96 = twoSumProblem18.TwoPointer(intArray94, (int) '4');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (byte) 0);
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray71, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (-1), (short) 10, (byte) 0 };
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -1, 10, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, (-1));
        int[] intArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray80 = twoSumProblem0.TwoPointer(intArray78, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray61, (int) (short) 10);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray61, (int) (short) 0);
        java.lang.Class<?> wildcardClass66 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem1.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem81.HashMap(intArray90, 100);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray90, (-1));
        int[] intArray96 = twoSumProblem1.TwoPointer(intArray90, 100);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray90, 10);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.HashMap(intArray52, (int) '4');
        java.lang.Class<?> wildcardClass59 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem49.HashMap(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem40.HashMap(intArray82, 100);
        int[] intArray88 = twoSumProblem39.BruteForce(intArray82, (int) (byte) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) ' ');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem50.HashMap(intArray88, 0);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.BruteForce(intArray27, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem45.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem39.TwoPointer(intArray75, (int) (short) -1);
        int[] intArray83 = twoSumProblem30.HashMap(intArray81, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem30.HashMap(intArray92, (int) (byte) 0);
        int[] intArray96 = twoSumProblem12.TwoPointer(intArray94, (int) ' ');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem31.TwoPointer(intArray67, (int) (short) -1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, 0);
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.HashMap(intArray76, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) '#');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem60.BruteForce(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) '4');
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        int[] intArray66 = twoSumProblem25.BruteForce(intArray64, 0);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray66, (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        java.lang.Class<?> wildcardClass76 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem58.HashMap(intArray81, 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 1);
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem30.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = twoSumProblem29.BruteForce(intArray78, 1);
        int[] intArray87 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray89 = twoSumProblem29.BruteForce(intArray87, (int) (byte) 10);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.TwoPointer(intArray70, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem47.TwoPointer(intArray81, 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray81, 100);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem57.HashMap(intArray70, (int) '#');
        int[] intArray78 = twoSumProblem0.HashMap(intArray76, (int) (short) 100);
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray67 = twoSumProblem0.HashMap(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, 0);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.BruteForce(intArray44, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray86 = twoSumProblem48.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem47.HashMap(intArray84, (int) (byte) 1);
        int[] intArray90 = twoSumProblem29.BruteForce(intArray88, (-1));
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }
}

