package TwoSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray8 = twoSumProblem0.TwoPointer(intArray6, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        java.lang.Class<?> wildcardClass6 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        java.lang.Class<?> wildcardClass6 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = intArray24.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        java.lang.Class<?> wildcardClass57 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.BruteForce(intArray25, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        java.lang.Class<?> wildcardClass12 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        java.lang.Class<?> wildcardClass36 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        java.lang.Class<?> wildcardClass20 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        java.lang.Class<?> wildcardClass54 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        java.lang.Class<?> wildcardClass20 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        java.lang.Class<?> wildcardClass15 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        java.lang.Class<?> wildcardClass15 = intArray14.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray17.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray60 = twoSumProblem49.HashMap(intArray58, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem49.HashMap(intArray91, (int) (short) 100);
        int[] intArray99 = twoSumProblem0.HashMap(intArray91, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        java.lang.Class<?> wildcardClass63 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        java.lang.Class<?> wildcardClass70 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        java.lang.Class<?> wildcardClass69 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        java.lang.Class<?> wildcardClass35 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        java.lang.Class<?> wildcardClass18 = intArray15.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        java.lang.Class<?> wildcardClass54 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        java.lang.Class<?> wildcardClass52 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray19 = twoSumProblem0.BruteForce(intArray17, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        java.lang.Class<?> wildcardClass43 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        java.lang.Class<?> wildcardClass58 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        java.lang.Class<?> wildcardClass69 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        java.lang.Class<?> wildcardClass69 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass18 = intArray15.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem20.BruteForce(intArray53, (int) (short) -1);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) (short) 100);
        java.lang.Class<?> wildcardClass64 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        java.lang.Class<?> wildcardClass28 = intArray27.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        java.lang.Class<?> wildcardClass63 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        java.lang.Class<?> wildcardClass35 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        int[] intArray71 = twoSumProblem0.BruteForce(intArray63, 1);
        java.lang.Class<?> wildcardClass72 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        java.lang.Class<?> wildcardClass17 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem35.TwoPointer(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray94 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray96 = twoSumProblem82.TwoPointer(intArray94, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        java.lang.Class<?> wildcardClass42 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.BruteForce(intArray58, (int) (short) 1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
        java.lang.Class<?> wildcardClass63 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray71, 0);
        java.lang.Class<?> wildcardClass80 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem20.BruteForce(intArray53, (int) (short) -1);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) (short) 100);
        java.lang.Class<?> wildcardClass64 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem52.BruteForce(intArray89, (-1));
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, 100);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        java.lang.Class<?> wildcardClass63 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray3 = twoSumProblem0.TwoPointer(intArray1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray78, 100);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = intArray24.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem90 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        int[] intArray95 = twoSumProblem90.BruteForce(intArray93, (int) '#');
        int[] intArray97 = twoSumProblem55.TwoPointer(intArray93, (int) (short) -1);
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray93, 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        java.lang.Class<?> wildcardClass17 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        java.lang.Class<?> wildcardClass1 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, 1);
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.TwoPointer(intArray85, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (-1));
        java.lang.Class<?> wildcardClass96 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray62 = twoSumProblem0.HashMap(intArray60, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray40 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray42 = twoSumProblem28.TwoPointer(intArray40, 100);
        int[] intArray44 = twoSumProblem27.HashMap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem27.BruteForce(intArray57, 0);
        int[] intArray63 = twoSumProblem15.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem64.HashMap(intArray79, (int) (byte) 100);
        int[] intArray83 = twoSumProblem15.BruteForce(intArray79, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray79, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, 1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem40.HashMap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem40.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem28.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem28.BruteForce(intArray92, (int) (short) -1);
        int[] intArray98 = twoSumProblem0.HashMap(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        java.lang.Class<?> wildcardClass54 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        java.lang.Class<?> wildcardClass52 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        int[] intArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray31 = twoSumProblem0.BruteForce(intArray29, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        java.lang.Class<?> wildcardClass52 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem90 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        int[] intArray95 = twoSumProblem90.BruteForce(intArray93, (int) '#');
        int[] intArray97 = twoSumProblem55.HashMap(intArray93, 0);
        int[] intArray99 = twoSumProblem0.HashMap(intArray97, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem19.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem68.HashMap(intArray83, (int) (byte) 100);
        int[] intArray87 = twoSumProblem19.BruteForce(intArray83, (int) (short) -1);
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray83, (-1));
        int[] intArray91 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem35.TwoPointer(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        java.lang.Class<?> wildcardClass79 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem6.HashMap(intArray86, (int) 'a');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        java.lang.Class<?> wildcardClass69 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        java.lang.Class<?> wildcardClass71 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        java.lang.Class<?> wildcardClass68 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        int[] intArray71 = twoSumProblem0.BruteForce(intArray63, 1);
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, (int) 'a');
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        java.lang.Class<?> wildcardClass43 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem6.HashMap(intArray86, (int) 'a');
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        java.lang.Class<?> wildcardClass57 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.BruteForce(intArray35, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem20.BruteForce(intArray83, 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        java.lang.Class<?> wildcardClass62 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        int[] intArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray70 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        java.lang.Class<?> wildcardClass35 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) '#');
        java.lang.Class<?> wildcardClass64 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.HashMap(intArray25, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem30.HashMap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem30.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem18.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray82, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) -1);
        java.lang.Class<?> wildcardClass61 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem19.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem68.HashMap(intArray83, (int) (byte) 100);
        int[] intArray87 = twoSumProblem19.BruteForce(intArray83, (int) (short) -1);
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray83, (-1));
        int[] intArray91 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem6.BruteForce(intArray80, (int) '4');
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass85 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        java.lang.Class<?> wildcardClass43 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.TwoPointer(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem15.TwoPointer(intArray77, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        java.lang.Class<?> wildcardClass52 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        java.lang.Class<?> wildcardClass54 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem52.BruteForce(intArray89, (-1));
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, 100);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        java.lang.Class<?> wildcardClass62 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) '4');
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        java.lang.Class<?> wildcardClass55 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem57.HashMap(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem40.HashMap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem40.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem28.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem28.BruteForce(intArray92, (int) (short) -1);
        int[] intArray98 = twoSumProblem0.HashMap(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.BruteForce(intArray86, (int) (short) 0);
        int[] intArray94 = twoSumProblem59.HashMap(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem42.HashMap(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        java.lang.Class<?> wildcardClass60 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem1.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) -1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = twoSumProblem0.HashMap(intArray47, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        java.lang.Class<?> wildcardClass17 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem52.BruteForce(intArray89, (-1));
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, 100);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        java.lang.Class<?> wildcardClass47 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray93 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray95 = twoSumProblem81.TwoPointer(intArray93, 100);
        int[] intArray97 = twoSumProblem80.HashMap(intArray95, (int) (byte) 100);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray95, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (-1));
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray45 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        java.lang.Class<?> wildcardClass36 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem18.HashMap(intArray85, (int) (short) -1);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem35.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray82, (int) '#');
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        java.lang.Class<?> wildcardClass45 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        java.lang.Class<?> wildcardClass36 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem59.HashMap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem59.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem44.TwoPointer(intArray89, (int) '#');
        int[] intArray97 = twoSumProblem43.TwoPointer(intArray89, (int) (byte) -1);
        int[] intArray99 = twoSumProblem0.HashMap(intArray89, 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        java.lang.Class<?> wildcardClass17 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.BruteForce(intArray86, (int) (short) 0);
        int[] intArray94 = twoSumProblem59.HashMap(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem42.HashMap(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray71, 0);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) '4');
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        java.lang.Class<?> wildcardClass17 = intArray16.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray94 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray96 = twoSumProblem82.TwoPointer(intArray94, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        java.lang.Class<?> wildcardClass42 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray87, (int) '#');
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        int[] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray30 = twoSumProblem0.HashMap(intArray28, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem35.TwoPointer(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem57.HashMap(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        java.lang.Class<?> wildcardClass12 = intArray9.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem20.BruteForce(intArray53, (int) (short) -1);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) (short) 100);
        java.lang.Class<?> wildcardClass64 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem25.HashMap(intArray80, 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.BruteForce(intArray86, (int) (short) 0);
        int[] intArray94 = twoSumProblem59.HashMap(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem42.HashMap(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray78, 100);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
        java.lang.Class<?> wildcardClass88 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        java.lang.Class<?> wildcardClass47 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) '#');
        java.lang.Class<?> wildcardClass64 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        int[] intArray53 = twoSumProblem25.TwoPointer(intArray51, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem25.HashMap(intArray80, 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) (byte) 10);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem18.HashMap(intArray85, (int) (short) -1);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.BruteForce(intArray24, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        int[] intArray62 = twoSumProblem27.HashMap(intArray60, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem27.BruteForce(intArray79, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem27.TwoPointer(intArray85, 0);
        int[] intArray91 = twoSumProblem9.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem52.HashMap(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem52.HashMap(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem52.BruteForce(intArray89, (-1));
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) 'a');
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem57.HashMap(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        java.lang.Class<?> wildcardClass42 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem35.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray82, (int) '#');
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        java.lang.Class<?> wildcardClass54 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        java.lang.Class<?> wildcardClass74 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        java.lang.Class<?> wildcardClass36 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem42.HashMap(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray75, (int) (short) -1);
        java.lang.Class<?> wildcardClass80 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray58, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem6.TwoPointer(intArray64, 0);
        int[] intArray70 = twoSumProblem0.BruteForce(intArray64, (int) (short) 1);
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem58.HashMap(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.TwoPointer(intArray92, (int) (short) 0);
        int[] intArray96 = twoSumProblem58.BruteForce(intArray94, (int) '#');
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.TwoPointer(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem15.TwoPointer(intArray77, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (short) -1);
        java.lang.Class<?> wildcardClass61 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        java.lang.Class<?> wildcardClass68 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem0.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) 'a');
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray17 = twoSumProblem0.TwoPointer(intArray15, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem65.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem59.TwoPointer(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem47.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 10);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = intArray22.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass97 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem60.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem40.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem34.BruteForce(intArray52, (int) (short) 0);
        int[] intArray60 = twoSumProblem25.HashMap(intArray58, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem25.BruteForce(intArray77, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem25.TwoPointer(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) (byte) -1);
        java.lang.Class<?> wildcardClass90 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        java.lang.Class<?> wildcardClass62 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.BruteForce(intArray72, (int) (short) 1);
        int[] intArray76 = twoSumProblem0.BruteForce(intArray72, (int) (short) -1);
        java.lang.Class<?> wildcardClass77 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray83, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (byte) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 0);
        java.lang.Class<?> wildcardClass74 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem40.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem34.BruteForce(intArray52, (int) (short) 0);
        int[] intArray60 = twoSumProblem25.HashMap(intArray58, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem25.BruteForce(intArray77, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem25.TwoPointer(intArray83, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) (byte) -1);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.HashMap(intArray96, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem6.BruteForce(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem6.HashMap(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray94 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray96 = twoSumProblem82.TwoPointer(intArray94, 100);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        java.lang.Class<?> wildcardClass43 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        java.lang.Class<?> wildcardClass36 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem17.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem75.HashMap(intArray88, (int) '#');
        int[] intArray96 = twoSumProblem17.TwoPointer(intArray88, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.BruteForce(intArray24, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        int[] intArray62 = twoSumProblem27.HashMap(intArray60, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem27.BruteForce(intArray79, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem27.TwoPointer(intArray85, 0);
        int[] intArray91 = twoSumProblem9.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem82.HashMap(intArray91, 100);
        int[] intArray95 = twoSumProblem54.BruteForce(intArray91, (-1));
        int[] intArray97 = twoSumProblem0.BruteForce(intArray91, 100);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) 'a');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem69.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray41 = twoSumProblem0.HashMap(intArray39, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem6.HashMap(intArray86, (int) 'a');
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (int) 'a');
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) '4');
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem17.TwoPointer(intArray89, 1);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 10);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem42.TwoPointer(intArray80, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) '4');
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.HashMap(intArray64, (int) (byte) 100);
        int[] intArray68 = twoSumProblem0.BruteForce(intArray64, (int) (short) -1);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.HashMap(intArray69, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem37.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem17.TwoPointer(intArray89, 1);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 10);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        java.lang.Class<?> wildcardClass43 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem60.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, (int) 'a');
        java.lang.Class<?> wildcardClass70 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 100);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem42.TwoPointer(intArray80, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) '4');
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem58.HashMap(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.TwoPointer(intArray92, (int) (short) 0);
        int[] intArray96 = twoSumProblem58.BruteForce(intArray94, (int) '#');
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        java.lang.Class<?> wildcardClass43 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray76, (int) '4');
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem49.BruteForce(intArray82, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 10);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem45.BruteForce(intArray78, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray78, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        java.lang.Class<?> wildcardClass52 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 0);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        java.lang.Class<?> wildcardClass71 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass18 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, 0);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray91, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem37.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem43.BruteForce(intArray76, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 1);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        java.lang.Class<?> wildcardClass54 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem40.HashMap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem40.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem28.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem28.BruteForce(intArray92, (int) (short) -1);
        int[] intArray98 = twoSumProblem0.HashMap(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass99 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem67.HashMap(intArray90, 0);
        int[] intArray96 = twoSumProblem52.TwoPointer(intArray94, (int) (short) 1);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) ' ');
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem42.TwoPointer(intArray80, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) '4');
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        java.lang.Class<?> wildcardClass54 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem37.BruteForce(intArray67, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem37.HashMap(intArray86, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem7.BruteForce(intArray54, (int) (short) 0);
        int[] intArray62 = twoSumProblem1.TwoPointer(intArray54, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem63.HashMap(intArray86, 0);
        int[] intArray92 = twoSumProblem1.HashMap(intArray86, 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.HashMap(intArray69, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        int[] intArray71 = twoSumProblem18.HashMap(intArray69, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem18.HashMap(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray91, (int) '4');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        java.lang.Class<?> wildcardClass64 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem42.HashMap(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray75, (int) (short) -1);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.HashMap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem42.BruteForce(intArray72, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem42.TwoPointer(intArray80, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, (int) '4');
        java.lang.Class<?> wildcardClass87 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        java.lang.Class<?> wildcardClass15 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        java.lang.Class<?> wildcardClass71 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem60.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray95 = twoSumProblem36.HashMap(intArray93, (int) (byte) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        java.lang.Class<?> wildcardClass28 = intArray23.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        int[] intArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray38 = twoSumProblem0.TwoPointer(intArray36, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray29 = twoSumProblem18.HashMap(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem30.HashMap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem30.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem18.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.HashMap(intArray82, (int) (byte) 100);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray82, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem42.HashMap(intArray75, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem42.BruteForce(intArray94, (int) (short) 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem40.HashMap(intArray63, 0);
        int[] intArray69 = twoSumProblem25.TwoPointer(intArray67, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.BruteForce(intArray88, (int) (short) 0);
        int[] intArray96 = twoSumProblem25.TwoPointer(intArray88, (int) '4');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        java.lang.Class<?> wildcardClass52 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        int[] intArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray14 = twoSumProblem0.BruteForce(intArray12, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem38.HashMap(intArray71, (int) (short) 1);
        int[] intArray75 = twoSumProblem21.HashMap(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem1.TwoPointer(intArray73, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.TwoPointer(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem1.BruteForce(intArray94, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.HashMap(intArray25, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        int[] intArray71 = twoSumProblem0.BruteForce(intArray63, 1);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem51.HashMap(intArray60, 100);
        int[] intArray64 = twoSumProblem36.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem80.HashMap(intArray89, 100);
        int[] intArray93 = twoSumProblem65.TwoPointer(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem36.HashMap(intArray91, 100);
        int[] intArray97 = twoSumProblem0.HashMap(intArray91, 10);
        java.lang.Class<?> wildcardClass98 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem58.HashMap(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.TwoPointer(intArray92, (int) (short) 0);
        int[] intArray96 = twoSumProblem58.BruteForce(intArray94, (int) '#');
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (short) 100);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem42.BruteForce(intArray75, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) 'a');
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem43.BruteForce(intArray76, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem44.BruteForce(intArray62, (int) (short) 0);
        int[] intArray70 = twoSumProblem35.HashMap(intArray68, (int) (short) 1);
        int[] intArray72 = twoSumProblem18.HashMap(intArray70, (int) (short) 100);
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (byte) 10);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem18.BruteForce(intArray62, (int) (byte) 0);
        int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) -1);
        java.lang.Class<?> wildcardClass67 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem18.HashMap(intArray85, (int) (short) -1);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (-1));
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem45.BruteForce(intArray78, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray78, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.BruteForce(intArray75, (int) (short) 0);
        int[] intArray83 = twoSumProblem42.BruteForce(intArray75, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) 'a');
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem42.HashMap(intArray75, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem42.BruteForce(intArray94, (int) (short) 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem8.HashMap(intArray12, (int) (short) 100);
        int[] intArray20 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray22 = twoSumProblem8.TwoPointer(intArray20, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem8.TwoPointer(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem7.TwoPointer(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        int[] intArray83 = twoSumProblem7.BruteForce(intArray81, (int) '4');
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray81, (int) (byte) 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 100);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        java.lang.Class<?> wildcardClass83 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        java.lang.Class<?> wildcardClass20 = intArray19.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem40.HashMap(intArray63, 0);
        int[] intArray69 = twoSumProblem25.TwoPointer(intArray67, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.BruteForce(intArray88, (int) (short) 0);
        int[] intArray96 = twoSumProblem25.TwoPointer(intArray88, (int) '4');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        java.lang.Class<?> wildcardClass66 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem32.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray78 = twoSumProblem15.BruteForce(intArray76, (int) '4');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        java.lang.Class<?> wildcardClass81 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem8.HashMap(intArray12, (int) (short) 100);
        int[] intArray20 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray22 = twoSumProblem8.TwoPointer(intArray20, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem8.TwoPointer(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem7.TwoPointer(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        int[] intArray83 = twoSumProblem7.BruteForce(intArray81, (int) '4');
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray81, (int) (byte) 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 100);
        java.lang.Class<?> wildcardClass88 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray76 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray78 = twoSumProblem64.TwoPointer(intArray76, 100);
        int[] intArray80 = twoSumProblem63.HashMap(intArray78, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray93 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray95 = twoSumProblem81.TwoPointer(intArray93, 100);
        int[] intArray97 = twoSumProblem63.BruteForce(intArray93, 0);
        int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) ' ');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        java.lang.Class<?> wildcardClass65 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem36.HashMap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem36.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem18.HashMap(intArray85, (int) (short) -1);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 100);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem35.HashMap(intArray87, (int) (short) 100);
        int[] intArray91 = twoSumProblem6.TwoPointer(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray63, (int) '4');
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray40 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray42 = twoSumProblem28.TwoPointer(intArray40, 100);
        int[] intArray44 = twoSumProblem27.HashMap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem27.BruteForce(intArray57, 0);
        int[] intArray63 = twoSumProblem15.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem64.HashMap(intArray79, (int) (byte) 100);
        int[] intArray83 = twoSumProblem15.BruteForce(intArray79, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray79, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem40.HashMap(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem15.BruteForce(intArray53, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem15.BruteForce(intArray73, (int) (short) -1);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        java.lang.Class<?> wildcardClass54 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem65.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem59.TwoPointer(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem47.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem37.TwoPointer(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem36.TwoPointer(intArray82, (int) (byte) -1);
        int[] intArray92 = twoSumProblem0.HashMap(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass93 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        java.lang.Class<?> wildcardClass77 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem17.TwoPointer(intArray53, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.BruteForce(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem17.BruteForce(intArray75, (int) (short) 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) (short) 1);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem20.BruteForce(intArray83, 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        java.lang.Class<?> wildcardClass74 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        java.lang.Class<?> wildcardClass47 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        java.lang.Class<?> wildcardClass77 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem46.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem46.HashMap(intArray88, (int) (short) 100);
        int[] intArray96 = twoSumProblem45.BruteForce(intArray94, 1);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem64.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem58.BruteForce(intArray76, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray76, (int) '4');
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem42.HashMap(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem0.HashMap(intArray75, (int) (short) -1);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem54.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem8.HashMap(intArray12, (int) (short) 100);
        int[] intArray20 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray22 = twoSumProblem8.TwoPointer(intArray20, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem8.TwoPointer(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem7.TwoPointer(intArray53, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        int[] intArray83 = twoSumProblem7.BruteForce(intArray81, (int) '4');
        int[] intArray85 = twoSumProblem1.TwoPointer(intArray81, (int) (byte) 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray81, 100);
        java.lang.Class<?> wildcardClass88 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        java.lang.Class<?> wildcardClass64 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        java.lang.Class<?> wildcardClass45 = intArray44.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        int[] intArray71 = twoSumProblem25.BruteForce(intArray69, (int) (byte) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray69, (int) ' ');
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = intArray41.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.BruteForce(intArray69, (int) (short) 0);
        int[] intArray77 = twoSumProblem42.HashMap(intArray75, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem42.BruteForce(intArray94, (int) (short) 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem65.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem59.TwoPointer(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem47.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        java.lang.Class<?> wildcardClass54 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem42.HashMap(intArray65, 0);
        int[] intArray71 = twoSumProblem25.BruteForce(intArray69, (int) (byte) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray69, (int) ' ');
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem54.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, 0);
        java.lang.Class<?> wildcardClass66 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem36.BruteForce(intArray88, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        java.lang.Class<?> wildcardClass60 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (byte) 0);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem29.BruteForce(intArray47, (int) (short) 0);
        int[] intArray55 = twoSumProblem20.HashMap(intArray53, (int) (short) 1);
        int[] intArray57 = twoSumProblem0.BruteForce(intArray55, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) '#');
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray71, 0);
        java.lang.Class<?> wildcardClass80 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem35.BruteForce(intArray83, (int) (short) 100);
        int[] intArray91 = twoSumProblem20.BruteForce(intArray83, 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        java.lang.Class<?> wildcardClass36 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem38.TwoPointer(intArray76, (int) (short) -1);
        int[] intArray82 = twoSumProblem20.BruteForce(intArray80, 0);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem67.TwoPointer(intArray89, (int) (short) 0);
        int[] intArray93 = twoSumProblem55.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) ' ');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem36.BruteForce(intArray88, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        java.lang.Class<?> wildcardClass61 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        java.lang.Class<?> wildcardClass72 = intArray71.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.BruteForce(intArray69, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        java.lang.Class<?> wildcardClass54 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        java.lang.Class<?> wildcardClass60 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem54.HashMap(intArray92, 0);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = twoSumProblem0.TwoPointer(intArray66, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray60 = twoSumProblem49.HashMap(intArray58, 100);
        int[] intArray62 = twoSumProblem34.TwoPointer(intArray60, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem78.HashMap(intArray87, 100);
        int[] intArray91 = twoSumProblem63.TwoPointer(intArray89, (int) (byte) 0);
        int[] intArray93 = twoSumProblem34.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem9.HashMap(intArray93, (int) (byte) 10);
        int[] intArray97 = twoSumProblem0.HashMap(intArray93, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        java.lang.Class<?> wildcardClass28 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray69, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem17.TwoPointer(intArray75, 0);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass82 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem49.BruteForce(intArray82, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 10);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (short) 100);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem1.HashMap(intArray56, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem59.HashMap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem59.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem1.BruteForce(intArray93, (int) ' ');
        int[] intArray97 = twoSumProblem0.HashMap(intArray95, (-1));
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        java.lang.Class<?> wildcardClass25 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        java.lang.Class<?> wildcardClass29 = intArray26.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem57.HashMap(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        java.lang.Class<?> wildcardClass54 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        java.lang.Class<?> wildcardClass52 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem1.TwoPointer(intArray87, (int) (short) 10);
        int[] intArray91 = twoSumProblem0.HashMap(intArray87, (int) (short) 1);
        java.lang.Class<?> wildcardClass92 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.HashMap(intArray75, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem60.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        java.lang.Class<?> wildcardClass39 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        java.lang.Class<?> wildcardClass43 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem6.HashMap(intArray57, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem6.HashMap(intArray68, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem71.BruteForce(intArray89, (int) (short) 0);
        int[] intArray97 = twoSumProblem6.TwoPointer(intArray89, (int) (byte) 1);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray89, (-1));
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 1]");
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        java.lang.Class<?> wildcardClass77 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem51.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray95 = twoSumProblem36.HashMap(intArray93, (int) (byte) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, 0);
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem25.BruteForce(intArray53, (int) (byte) 10);
        int[] intArray57 = twoSumProblem0.HashMap(intArray53, (int) '4');
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 100);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = intArray8.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.HashMap(intArray92, (int) (byte) 100);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        java.lang.Class<?> wildcardClass60 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.HashMap(intArray58, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (short) -1);
        java.lang.Class<?> wildcardClass65 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        java.lang.Class<?> wildcardClass31 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray82 = twoSumProblem44.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem43.HashMap(intArray80, (int) (byte) 1);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem45.TwoPointer(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 10);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem32.TwoPointer(intArray74, (int) (short) 1);
        int[] intArray78 = twoSumProblem15.BruteForce(intArray76, (int) '4');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray76, (int) ' ');
        java.lang.Class<?> wildcardClass81 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        java.lang.Class<?> wildcardClass54 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray56, (int) (short) -1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray60, 0);
        int[] intArray68 = new int[] { 10, (short) -1, (byte) 0, (short) -1, ' ' };
        int[] intArray70 = twoSumProblem0.HashMap(intArray68, (-1));
        java.lang.Class<?> wildcardClass71 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, -1, 0, -1, 32]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 2]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem6.HashMap(intArray39, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem6.HashMap(intArray86, (int) 'a');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        java.lang.Class<?> wildcardClass37 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem17.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        java.lang.Class<?> wildcardClass36 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (short) -1);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray67 = twoSumProblem0.HashMap(intArray65, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray60 = twoSumProblem49.HashMap(intArray58, 100);
        int[] intArray62 = twoSumProblem34.TwoPointer(intArray60, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray75 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray77 = twoSumProblem63.TwoPointer(intArray75, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem78.HashMap(intArray87, 100);
        int[] intArray91 = twoSumProblem63.TwoPointer(intArray89, (int) (byte) 0);
        int[] intArray93 = twoSumProblem34.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem9.HashMap(intArray93, (int) (byte) 10);
        int[] intArray97 = twoSumProblem0.HashMap(intArray93, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        java.lang.Class<?> wildcardClass35 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem1.HashMap(intArray56, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem59.HashMap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem59.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem1.BruteForce(intArray93, (int) ' ');
        int[] intArray97 = twoSumProblem0.HashMap(intArray95, (-1));
        java.lang.Class<?> wildcardClass98 = intArray97.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray49, 1);
        java.lang.Class<?> wildcardClass58 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem47.HashMap(intArray80, (int) (short) 1);
        int[] intArray84 = twoSumProblem30.HashMap(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem29.TwoPointer(intArray84, (int) (byte) 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) '#');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem17.BruteForce(intArray72, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem75.HashMap(intArray88, (int) '#');
        int[] intArray96 = twoSumProblem17.TwoPointer(intArray88, 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 1);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem47.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) -1);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.HashMap(intArray73, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem58.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        int[] intArray37 = twoSumProblem13.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray39 = twoSumProblem1.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem0.HashMap(intArray37, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        java.lang.Class<?> wildcardClass75 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem47.HashMap(intArray89, 100);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray63 = twoSumProblem52.HashMap(intArray61, 100);
        int[] intArray65 = twoSumProblem37.TwoPointer(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem37.BruteForce(intArray69, 1);
        int[] intArray75 = twoSumProblem0.HashMap(intArray69, (int) 'a');
        java.lang.Class<?> wildcardClass76 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray91, (int) '4');
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray78, 100);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem49.TwoPointer(intArray83, 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        int[] intArray82 = twoSumProblem36.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem18.BruteForce(intArray82, (int) (byte) -1);
        int[] intArray86 = twoSumProblem0.HashMap(intArray84, 100);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.BruteForce(intArray78, (int) (short) 0);
        int[] intArray86 = twoSumProblem45.BruteForce(intArray78, (int) (short) -1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray78, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem32.BruteForce(intArray80, (int) (short) 100);
        int[] intArray88 = twoSumProblem15.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem6.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (-1));
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray40 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray42 = twoSumProblem28.TwoPointer(intArray40, 100);
        int[] intArray44 = twoSumProblem27.HashMap(intArray42, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem27.BruteForce(intArray57, 0);
        int[] intArray63 = twoSumProblem15.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem64.HashMap(intArray79, (int) (byte) 100);
        int[] intArray83 = twoSumProblem15.BruteForce(intArray79, (int) (short) -1);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray79, (int) ' ');
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass77 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray27 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray29 = twoSumProblem15.TwoPointer(intArray27, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray41 = twoSumProblem30.HashMap(intArray39, 100);
        int[] intArray43 = twoSumProblem15.TwoPointer(intArray41, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem59.HashMap(intArray68, 100);
        int[] intArray72 = twoSumProblem44.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray74 = twoSumProblem15.HashMap(intArray70, 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) (short) 10);
        java.lang.Class<?> wildcardClass77 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem15.HashMap(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray67, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem15.TwoPointer(intArray73, 0);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) '4');
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem35.BruteForce(intArray73, (int) '4');
        int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        java.lang.Class<?> wildcardClass62 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem49.BruteForce(intArray77, (int) (byte) 10);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray77, 0);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        java.lang.Class<?> wildcardClass60 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.BruteForce(intArray58, (int) (short) 1);
        int[] intArray62 = twoSumProblem0.BruteForce(intArray58, (int) (short) 1);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray65 = twoSumProblem0.HashMap(intArray63, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) ' ');
        java.lang.Class<?> wildcardClass75 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, 1);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) 'a');
        java.lang.Class<?> wildcardClass75 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) '#');
        int[] intArray61 = twoSumProblem0.HashMap(intArray53, (int) (byte) -1);
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.HashMap(intArray62, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem17.TwoPointer(intArray53, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem60.BruteForce(intArray75, (int) (short) 1);
        int[] intArray79 = twoSumProblem17.BruteForce(intArray75, (int) (short) 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) (short) 1);
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem18.HashMap(intArray41, 0);
        int[] intArray47 = twoSumProblem1.BruteForce(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem66.BruteForce(intArray78, 0);
        int[] intArray84 = twoSumProblem60.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray86 = twoSumProblem48.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem1.HashMap(intArray84, (int) (short) 1);
        int[] intArray90 = twoSumProblem0.HashMap(intArray84, 1);
        java.lang.Class<?> wildcardClass91 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem65.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem59.TwoPointer(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem47.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, (int) (short) 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem52.HashMap(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 1);
        java.lang.Class<?> wildcardClass90 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem67.TwoPointer(intArray89, (int) (short) 0);
        int[] intArray93 = twoSumProblem55.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.TwoPointer(intArray89, (int) '#');
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem36.BruteForce(intArray88, (int) (short) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        int[] intArray76 = twoSumProblem0.BruteForce(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        java.lang.Class<?> wildcardClass54 = intArray53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem0.HashMap(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass92 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem65.HashMap(intArray78, (int) '#');
        int[] intArray86 = twoSumProblem29.HashMap(intArray84, (-1));
        int[] intArray88 = twoSumProblem1.HashMap(intArray86, 10);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        java.lang.Class<?> wildcardClass55 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem1.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem1.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem81.HashMap(intArray90, 100);
        int[] intArray94 = twoSumProblem53.BruteForce(intArray90, (-1));
        int[] intArray96 = twoSumProblem1.TwoPointer(intArray90, 100);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray90, 10);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }
}

