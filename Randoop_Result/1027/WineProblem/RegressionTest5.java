package WineProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, (int) (byte) 0, 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, (int) (byte) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 0, 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, 0, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 353164, 0, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray67 = new int[] { (short) -1, 10, (byte) 100 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray86 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray87 = new int[][] { intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, 0, 1, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 100, 493, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 710 + "'", int61 == 710);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (short) 10, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray62 = new int[][] { intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 0, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 1, (int) (byte) 1, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, (int) (short) 100, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray64 = new int[][] { intArray43, intArray48, intArray53, intArray58, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, (int) (short) 0, (int) (short) 0);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, (int) (short) 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (int) (byte) 1, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-3) + "'", int69 == (-3));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray31 = new int[][] { intArray30 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, (int) (short) 0, intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass32 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', 2003, intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[][] intArray57 = new int[][] { intArray47, intArray50, intArray53, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, 0, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (byte) 0, (int) (short) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 1, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 1, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray69 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray74 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray75 = new int[][] { intArray54, intArray59, intArray64, intArray69, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, (int) (byte) 0, intArray75);
        int[] intArray85 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray91 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray92 = new int[][] { intArray85, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, (int) (byte) 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2003, 896, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 97 + "'", int93 == 97);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-5) + "'", int94 == (-5));
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray74 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray75 = new int[][] { intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, 0, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 1, (int) (byte) 1, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) 'a', intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, (int) (byte) 0, 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (byte) 0);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, 0, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, 4, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (short) 1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass52 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray50 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray50, 0, 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray71 = new int[][] { intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, 0, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, 0, 1, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '4', (int) (short) -1, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 500 + "'", int53 == 500);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 493 + "'", int54 == 493);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 493 + "'", int55 == 493);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 493 + "'", int56 == 493);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 493 + "'", int57 == 493);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass61 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 319, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 353164 + "'", int7 == 353164);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 353164, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass39 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 1, (int) (short) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2003, 10, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-3) + "'", int75 == (-3));
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (byte) 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (byte) 0);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 0, 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, 10, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 710 + "'", int61 == 710);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 100, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 60, 97, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[][] intArray53 = new int[][] { intArray43, intArray46, intArray49, intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 0, 0, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 0, (int) (short) 1, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, (int) (byte) 10, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 100, (-5), intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 52, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 500, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', (int) (byte) 0, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 500 + "'", int46 == 500);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 493 + "'", int47 == 493);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 493 + "'", int48 == 493);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 493 + "'", int49 == 493);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 493 + "'", int50 == 493);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 10, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 500, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 496, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray34, 0, (int) (short) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 1, (int) (byte) 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 1, (int) (byte) 1, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) ' ', (int) (short) 10, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-3) + "'", int44 == (-3));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { '4' };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, (int) (byte) 0, 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (byte) 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray43 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[][] intArray75 = new int[][] { intArray65, intArray68, intArray71, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, 0, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, (int) (short) 1, intArray75);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (short) 1, 0, intArray75);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 0, 0, intArray75);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 1, 0, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, (int) (short) 10, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[52]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 500, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        java.lang.Class<?> wildcardClass8 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 10, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray65, (int) (byte) 0, 0);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray65, 0, (int) (byte) 0);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray87 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray88 = new int[][] { intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, 0, 1, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (short) 0, 0, intArray88);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, (int) (short) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 353164, (int) (short) 100, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 30 + "'", int91 == 30);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 97, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray57 = new int[] { (short) -1, 10, (byte) 100 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray67 = new int[] { '4' };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray76 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray77 = new int[][] { intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, 0, 1, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 353164, (int) (short) 0, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[52]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-3) + "'", int79 == (-3));
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (short) 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, 1);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, (int) (byte) 0, (int) (short) 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 30, 500, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 500 + "'", int11 == 500);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 28 + "'", int49 == 28);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-3) + "'", int82 == (-3));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 500 + "'", int83 == 500);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[][] intArray24 = new int[][] {};
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 0, (int) (short) 0, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 10, (int) (short) 100, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, (int) (byte) 100, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 1, (int) (byte) 1, intArray29);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[][] intArray49 = new int[][] {};
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 0, (int) (short) 0, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, (int) (short) 0, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 30 + "'", int31 == 30);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[][] intArray39 = new int[][] { intArray29, intArray32, intArray35, intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, 0, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, (int) (short) 1, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, (int) (byte) 0, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (byte) 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, 0, (int) (byte) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, (int) (short) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 0, intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 493, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 1, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray64 = new int[][] { intArray43, intArray48, intArray53, intArray58, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 319, (int) (byte) 10, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass48 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray60 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray61 = new int[][] { intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, 0, 1, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 10, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray62 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray67 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 1, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray78);
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray94 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray95 = new int[][] { intArray88, intArray94 };
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, (int) (byte) 0, intArray95);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, 319, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 30 + "'", int79 == 30);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 97 + "'", int96 == 97);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, (int) (short) 0, (int) (short) 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray68 = new int[] { (short) -1, 10, (byte) 100 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray84 = new int[] { '4' };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray84);
        int[] intArray93 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray94 = new int[][] { intArray93 };
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray84, 0, 1, intArray94);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 1, (int) (byte) 1, intArray94);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 0, 0, intArray94);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 0, intArray94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 100, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 710 + "'", int44 == 710);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 710 + "'", int45 == 710);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-5) + "'", int48 == (-5));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 710 + "'", int49 == 710);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 710 + "'", int50 == 710);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 710 + "'", int51 == 710);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 710 + "'", int52 == 710);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 710 + "'", int53 == 710);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 710 + "'", int54 == 710);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[52]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 10 + "'", int95 == 10);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 30 + "'", int96 == 30);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2000 + "'", int97 == 2000);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-5) + "'", int98 == (-5));
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-5), 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 10, 0, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 66315 + "'", int7 == 66315);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 66315 + "'", int8 == 66315);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (short) 0);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (short) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) -1, 500, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-3) + "'", int29 == (-3));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        java.lang.Class<?> wildcardClass37 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray65 = new int[][] { intArray44, intArray49, intArray54, intArray59, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (byte) 0, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 319, (int) (short) -1, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 30 + "'", int66 == 30);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, (int) (byte) 0, 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, (int) (byte) 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[][] intArray90 = new int[][] { intArray80, intArray83, intArray86, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, (int) (byte) 0, 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, (int) (short) 1, intArray90);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (short) 1, 0, intArray90);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (short) 0, 0, intArray90);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, 0, intArray90);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 0, intArray90);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 0, intArray90);
        int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 319 + "'", int92 == 319);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 52 + "'", int96 == 52);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 100 + "'", int97 == 100);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 896 + "'", int98 == 896);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 896 + "'", int99 == 896);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 1, 0, intArray86);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray86);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 1, 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, 0, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) 'a', 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[][] intArray35 = new int[][] { intArray25, intArray28, intArray31, intArray34 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (byte) 0, 0, intArray35);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray72 = new int[][] { intArray51, intArray56, intArray61, intArray66, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 0, 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 353164, (int) (byte) 0, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '#', 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 496, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, (int) (short) 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, 0);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray80 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray81 = new int[][] { intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, 0, 1, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, 353164, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-3) + "'", int67 == (-3));
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray82 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray87 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray92 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray93 = new int[][] { intArray72, intArray77, intArray82, intArray87, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (short) 1, 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-3), (-5), intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 30 + "'", int94 == 30);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray16 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (short) 0, (int) (short) 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray34 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray41 = new int[] { (short) -1, 10, (byte) 100 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray57 = new int[] { '4' };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray67 = new int[][] { intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, 0, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 1, (int) (byte) 1, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 0, 0, intArray67);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 97, 97, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-5) + "'", int21 == (-5));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[52]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 30 + "'", int69 == 30);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-5) + "'", int71 == (-5));
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray13, 0, (int) (short) 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray33 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 1, (int) (byte) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 1, (int) (byte) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 4292, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-3) + "'", int23 == (-3));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-4), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { '4' };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (byte) 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (byte) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 0, intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 0, 0, intArray72);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 1, 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 493, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[52]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 4, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2003, 896, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (byte) 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray71 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray72 = new int[][] { intArray51, intArray56, intArray61, intArray66, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 1, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, (int) (byte) 0, intArray72);
        int[] intArray82 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray88 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray89 = new int[][] { intArray82, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (short) 1, (int) (byte) 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 10, 4, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30 + "'", int73 == 30);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 97 + "'", int90 == 97);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-5) + "'", int91 == (-5));
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray59 = new int[][] { intArray38, intArray43, intArray48, intArray53, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2003, 353164, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray27 = new int[] { (byte) 100, 319 };
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[][] intArray37 = new int[][] { intArray27, intArray30, intArray33, intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 0, intArray78);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 1, (int) (short) 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 10, 493, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', (int) '4', intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 710, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray65, (int) (byte) 0, 0);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray65, 0, (int) (byte) 0);
        int[] intArray78 = new int[] { '4' };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray78);
        int[] intArray87 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray88 = new int[][] { intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray78, 0, 1, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (short) 0, 0, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 60, 319, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[52]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray48 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[][] intArray80 = new int[][] { intArray70, intArray73, intArray76, intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (byte) 0, (int) (short) 1, intArray80);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (short) 1, 0, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, 12390, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 60, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass67 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray10 = new int[] { (short) -1, 10, (byte) 100 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (short) 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { '4' };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray48 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray49 = new int[][] { intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, 0, 1, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 1, (int) (byte) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, 1, (int) (byte) 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2003, 353164, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2000 + "'", int34 == 2000);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2000 + "'", int35 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[52]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 30 + "'", int52 == 30);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray42 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray43 = new int[][] { intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, 0, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, (int) (byte) 1, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2003, (int) '4', intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 1, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray54 = new int[][] { intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 1, (int) (byte) 1, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, (int) (short) 1, intArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 710, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 896, (int) (byte) -1, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 0);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), (int) (short) 100, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-3), 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-4), 500, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, 0, intArray69);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray69);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2130 + "'", int75 == 2130);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2191 + "'", int76 == 2191);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 1, 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, (int) '4', intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray25 = new int[] { (short) 1, 710, 30 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, (int) (byte) 0, 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, (int) (byte) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 0, 0, intArray91);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 1, 0, intArray91);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 1, (int) (byte) 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 353164, 0, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2191 + "'", int26 == 2191);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2191 + "'", int27 == 2191);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2130 + "'", int97 == 2130);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray36 = new int[][] { intArray15, intArray20, intArray25, intArray30, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 0, (int) (short) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) -1, 4292, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-3) + "'", int81 == (-3));
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray31 = new int[] { (short) -1, 10, (byte) 100 };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray47 = new int[] { '4' };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray57 = new int[][] { intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, 0, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 1, (int) (byte) 1, intArray57);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 0, 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), (int) (short) -1, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[52]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 12390 + "'", int9 == 12390);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 12390 + "'", int10 == 12390);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, (int) (short) 0, (int) (short) 0);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[][] intArray81 = new int[][] { intArray71, intArray74, intArray77, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, 0, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, (int) (short) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 493, 30, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        int[] intArray5 = new int[] { 2191, 30, 710, (-4), 12390 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-1), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[2191, 30, 710, -4, 12390]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 66315 + "'", int6 == 66315);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 66315 + "'", int7 == 66315);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass35 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 30, 0, intArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass14 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 1, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray24 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray45 = new int[][] { intArray24, intArray29, intArray34, intArray39, intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, (int) (short) 0, (int) (short) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, 0, (int) (short) 1, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-4), 2003, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 30 + "'", int46 == 30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray58, (int) (byte) 0, 0);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray58, 0, (int) (byte) 0);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray80 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray81 = new int[][] { intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, 0, 1, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (short) 0, 0, intArray81);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, (int) (short) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2130, 0, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 30 + "'", int84 == 30);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        int[] intArray5 = new int[] { 30, 28, (short) 10, 'a', '4' };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { (short) 1, 710, 30 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 1, 0, intArray78);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray78);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 1, 0, intArray78);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 1, (int) (byte) 1, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) -1, 100, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[30, 28, 10, 97, 52]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 809 + "'", int6 == 809);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2191 + "'", int13 == 2191);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2191 + "'", int14 == 2191);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2130 + "'", int84 == 2130);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray52 = new int[][] { intArray31, intArray36, intArray41, intArray46, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 1, 0, intArray93);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 0, (int) (short) 0, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 10, 4292, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-3) + "'", int97 == (-3));
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[][] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 97, (-5), intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 100, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 319, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass67 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray35 = new int[] { (short) -1, 10, (byte) 100 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray65 = new int[][] { intArray44, intArray49, intArray54, intArray59, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (byte) 0, intArray65);
        int[] intArray75 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray81 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray82 = new int[][] { intArray75, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (byte) 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 100, 66315, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 30 + "'", int66 == 30);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 97 + "'", int83 == 97);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, (int) (byte) 0, 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (byte) 0);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 0, 0, intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (short) 1, intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray68 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray68, 0, 0);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray79 = new int[] { '4' };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray79);
        int[] intArray88 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray89 = new int[][] { intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray79, 0, 1, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, 0, 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 0, (int) (byte) 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-3), 4, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 500 + "'", int71 == 500);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 493 + "'", int72 == 493);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 493 + "'", int73 == 493);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 493 + "'", int74 == 493);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 493 + "'", int75 == 493);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[52]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 60, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray66);
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray82 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray83 = new int[][] { intArray76, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 100, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-5) + "'", int19 == (-5));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 97 + "'", int84 == 97);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 97, (int) (byte) 10, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 500 + "'", int24 == 500);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (byte) 0, 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray45 = new int[] { (short) -1, 10, (byte) 100 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray64 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray69 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray74 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray75 = new int[][] { intArray54, intArray59, intArray64, intArray69, intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, (int) (byte) 0, intArray75);
        int[] intArray85 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray91 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray92 = new int[][] { intArray85, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, (int) (byte) 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 1, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 2000, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 30 + "'", int76 == 30);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 97 + "'", int93 == 97);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-5) + "'", int94 == (-5));
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray57 = new int[][] { intArray36, intArray41, intArray46, intArray51, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray57);
        int[] intArray67 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray73 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray74 = new int[][] { intArray67, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 52, 896, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 97 + "'", int75 == 97);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 60, (int) (byte) -1, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (short) 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 0, (int) (short) 0, intArray91);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 1, 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 809, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4292, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 60, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, (int) (byte) 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray10, 0, (int) (byte) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 0, 0, intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 1, 0, intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray81 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray82 = new int[][] { intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, 0, 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), 4389, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 496, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray29 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, (int) (short) 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray54 = new int[] { (short) -1, 10, (byte) 100 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray79 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray80 = new int[][] { intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, 0, 1, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 1, (int) (byte) 1, intArray80);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 0, 0, intArray80);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 0, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 710, 97, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 710 + "'", int30 == 710);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 710 + "'", int31 == 710);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-5) + "'", int34 == (-5));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 710 + "'", int35 == 710);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 710 + "'", int36 == 710);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 710 + "'", int37 == 710);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 710 + "'", int38 == 710);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 710 + "'", int39 == 710);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 710 + "'", int40 == 710);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 30 + "'", int82 == 30);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2000 + "'", int83 == 2000);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-5) + "'", int84 == (-5));
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 1, (int) (byte) 1, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, (int) (byte) 10, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, 0);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) '#', 493, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) '#', 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 60, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, (int) (short) 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray78 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray79 = new int[][] { intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, 0, 1, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (short) 1, (int) (short) 1, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 2191, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 30 + "'", int81 == 30);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray63 = new int[] { (short) -1, 10, (byte) 100 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray77 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray82 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray87 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray92 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray93 = new int[][] { intArray72, intArray77, intArray82, intArray87, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (short) 1, 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2003, 30, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 30 + "'", int94 == 30);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 319, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) 'a', 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, (int) (byte) 0, 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, (int) (byte) 0);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, (int) (short) 1, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2000, 10, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 30 + "'", int59 == 30);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray51, 0, (int) (short) 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray78 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray79 = new int[][] { intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, 0, 1, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (short) 1, (int) (short) 1, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 493, 52, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-3) + "'", int61 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 30 + "'", int81 == 30);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, (int) (byte) -1, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 97, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 2130);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 319, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (short) -1, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, 809, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { '4' };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, (int) (byte) 0, 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, (int) (byte) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (short) 0, 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 1, 0, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 2130, 896, intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray28 = new int[] { (byte) 100, 319 };
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[][] intArray38 = new int[][] { intArray28, intArray31, intArray34, intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, (int) (byte) 0, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray73 = new int[][] { intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 0, 1, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, (int) (short) 1, intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-5), (int) (short) -1, intArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 1, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray65 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray66 = new int[][] { intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, 0, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (byte) 1, (int) (byte) 1, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-4), 0, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, (int) (byte) 0, 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray30, 0, (int) (byte) 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[][] intArray81 = new int[][] { intArray71, intArray74, intArray77, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, 0, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, (int) (short) 1, intArray81);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (short) 1, 0, intArray81);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 0, 0, intArray81);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 1, 0, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 2000, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (short) 0, (int) (short) 0);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, (int) (short) 1, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-3), 30, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-3) + "'", int71 == (-3));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 10, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 100, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 4, 809, intArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass50 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        int[] intArray0 = null;
        int[][] intArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 12564, 4, intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray40 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray56 = new int[][] { intArray35, intArray40, intArray45, intArray50, intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray56);
        int[] intArray66 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray72 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray73 = new int[][] { intArray66, intArray72 };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (short) 1, (int) (byte) 0, intArray73);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray73);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 30 + "'", int57 == 30);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 97 + "'", int74 == 97);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-5) + "'", int75 == (-5));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        int[] intArray3 = new int[] { '4', 12390, 319 };
        int[] intArray10 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[][] intArray33 = new int[][] { intArray23, intArray26, intArray29, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, 0, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (byte) 0, (int) (short) 1, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, 10, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[52, 12390, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2000 + "'", int13 == 2000);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 1, (int) (byte) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) '4', (int) 'a', intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 0, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray46 = new int[] { '4', 809, 710, 2191 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { (short) -1, 10, (byte) 100 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray68 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray75 = new int[] { '4' };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray75);
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[] intArray90 = new int[] { (byte) 100, 319 };
        int[][] intArray91 = new int[][] { intArray81, intArray84, intArray87, intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray75, (int) (byte) 0, 0, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, (int) (short) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 1, 0, intArray91);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, (int) (byte) 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4292, 2130, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 12564 + "'", int47 == 12564);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[52]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 319 + "'", int93 == 319);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 208 + "'", int95 == 208);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 0);
        java.lang.Class<?> wildcardClass55 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 100, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray33 = new int[] { (short) -1, 10, (byte) 100 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, (int) (short) 0);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, 0);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray63 = new int[][] { intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 0, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, (int) (short) 1, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) 'a', (int) '#', intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[][] intArray47 = new int[][] { intArray37, intArray40, intArray43, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, 0, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4, 4, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[][] intArray65 = new int[][] { intArray55, intArray58, intArray61, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, 0, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, (int) (short) 1, intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 1, 0, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 66315, 493, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, (int) (byte) 0, 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray28, 0, (int) (byte) 0);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray56 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, (int) (short) 1, intArray79);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (short) 1, 0, intArray79);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 0, 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, (int) (byte) 1, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 97, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray42 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray42, (int) (short) 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray60 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray67 = new int[] { (short) -1, 10, (byte) 100 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray83 = new int[] { '4' };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray83);
        int[] intArray92 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray93 = new int[][] { intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray83, 0, 1, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 1, (int) (byte) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (short) 0, 0, intArray93);
        int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 0, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, (-1), intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 710 + "'", int43 == 710);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 710 + "'", int44 == 710);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-5) + "'", int47 == (-5));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 710 + "'", int48 == 710);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 710 + "'", int49 == 710);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 710 + "'", int50 == 710);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 710 + "'", int51 == 710);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 710 + "'", int52 == 710);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 710 + "'", int53 == 710);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[52]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 30 + "'", int95 == 30);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2000 + "'", int96 == 2000);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-5) + "'", int97 == (-5));
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass22 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, 0);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray52 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray53 = new int[][] { intArray52 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, (int) (short) 1, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 10, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray54 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray54, 0, 0);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray74 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray75 = new int[][] { intArray74 };
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, 0, 1, intArray75);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray75);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray75);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 52, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 500 + "'", int57 == 500);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 493 + "'", int58 == 493);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 493 + "'", int59 == 493);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 493 + "'", int60 == 493);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 493 + "'", int61 == 493);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray61, (int) (byte) 0, 0);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray61, 0, (int) (byte) 0);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray83 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray84 = new int[][] { intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, 0, 1, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (short) 0, 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', (-3), intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass48 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (short) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 60 + "'", int13 == 60);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 4, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[][] intArray49 = new int[][] { intArray39, intArray42, intArray45, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, 0, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, (int) (short) 1, intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, 1, 0, intArray49);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, (int) (byte) 0, intArray49);
        java.lang.Class<?> wildcardClass54 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 208 + "'", int53 == 208);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass20 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray13 = new int[] { (short) -1, 10, (byte) 100 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray43 = new int[][] { intArray22, intArray27, intArray32, intArray37, intArray42 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 1, 1, intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray52 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray68 = new int[] { '4' };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray68);
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[][] intArray84 = new int[][] { intArray74, intArray77, intArray80, intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray68, (int) (byte) 0, 0, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, (int) (short) 1, intArray84);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, 0, intArray84);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, (int) (short) 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 97, 0, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 30 + "'", int44 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[52]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (byte) 0);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray81 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray82 = new int[][] { intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, 0, 1, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, 1, (int) (byte) 1, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 60, 896, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 4 + "'", int84 == 4);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 1, (int) (byte) 1, intArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (-1), (int) (short) 0, intArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[][] intArray56 = new int[][] {};
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 100, 0, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-3) + "'", int57 == (-3));
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray24 = new int[] { '4' };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray30 = new int[] { (byte) 100, 319 };
        int[] intArray33 = new int[] { (byte) 100, 319 };
        int[] intArray36 = new int[] { (byte) 100, 319 };
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[][] intArray40 = new int[][] { intArray30, intArray33, intArray36, intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, 0, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 896, 353164, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[52]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-3) + "'", int65 == (-3));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 97, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass19 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 100, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass62 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, (int) (short) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray39, 0, 0);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 0, (int) (short) 1, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', 208, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (short) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, 1);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 0, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) -1, 4292, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 500 + "'", int17 == 500);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 28 + "'", int55 == 28);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-3) + "'", int88 == (-3));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 500 + "'", int89 == 500);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (byte) 100, 66315);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 1, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray64 = new int[] { (short) -1, 10, (byte) 100 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray83 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray84 = new int[][] { intArray83 };
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, 0, 1, intArray84);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, 0, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-5), (int) (byte) -1, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-3) + "'", int86 == (-3));
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[] intArray41 = new int[] { (byte) 100, 319 };
        int[] intArray44 = new int[] { (byte) 100, 319 };
        int[] intArray47 = new int[] { (byte) 100, 319 };
        int[][] intArray48 = new int[][] { intArray38, intArray41, intArray44, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 1, (int) (short) 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 0, (-3), intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        int[] intArray5 = new int[] { (short) -1, 97, 4292, 2130, 66315 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, 0, (int) (short) 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 0, 0, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 0, 4, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 52, (int) 'a', intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 97, 4292, 2130, 66315]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 353164 + "'", int6 == 353164);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-3) + "'", int52 == (-3));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 30, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray49 = new int[] { (short) -1, 710, 4389, (-3), 12390, 353164 };
        int[] intArray56 = new int[] { (short) -1, 710, 4389, (-3), 12390, 353164 };
        int[] intArray63 = new int[] { (short) -1, 710, 4389, (-3), 12390, 353164 };
        int[] intArray70 = new int[] { (short) -1, 710, 4389, (-3), 12390, 353164 };
        int[] intArray77 = new int[] { (short) -1, 710, 4389, (-3), 12390, 353164 };
        int[] intArray84 = new int[] { (short) -1, 710, 4389, (-3), 12390, 353164 };
        int[][] intArray85 = new int[][] { intArray49, intArray56, intArray63, intArray70, intArray77, intArray84 };
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 12390, 896, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 710, 4389, -3, 12390, 353164]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 710, 4389, -3, 12390, 353164]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 710, 4389, -3, 12390, 353164]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 710, 4389, -3, 12390, 353164]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 710, 4389, -3, 12390, 353164]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 710, 4389, -3, 12390, 353164]");
        org.junit.Assert.assertNotNull(intArray85);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray65 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray72 = new int[] { '4' };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[] intArray87 = new int[] { (byte) 100, 319 };
        int[][] intArray88 = new int[][] { intArray78, intArray81, intArray84, intArray87 };
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, (int) (byte) 0, 0, intArray88);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, (int) (short) 1, intArray88);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 192, (int) (byte) 10, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[52]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 319 + "'", int90 == 319);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray21 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[][] intArray44 = new int[][] { intArray34, intArray37, intArray40, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (byte) 0, 0, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 1, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 4389, (int) (byte) -1, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, 0, (int) (short) 0);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray72 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray72);
        int[] intArray81 = new int[] { '4' };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray81);
        int[] intArray90 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray91 = new int[][] { intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray81, 0, 1, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray72, 1, (int) (byte) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 1, (int) (byte) 1, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) -1, 0, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-3) + "'", int62 == (-3));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2000 + "'", int74 == 2000);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2000 + "'", int75 == 2000);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2000 + "'", int76 == 2000);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2000 + "'", int77 == 2000);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[52]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 30 + "'", int94 == 30);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (short) 0, (int) (short) 0);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[][] intArray71 = new int[][] { intArray61, intArray64, intArray67, intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, 0, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, (int) (short) 1, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) '#', 12564, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-3) + "'", int49 == (-3));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass53 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray12 = new int[] { (short) -1, 10, (byte) 100 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, 0, (int) (short) 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (short) 1, (int) (short) 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 208, (int) (byte) 1, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12564 + "'", int6 == 12564);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-3) + "'", int22 == (-3));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 1, (int) 'a', intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 97, (int) (short) 0, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 896 + "'", int9 == 896);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 896 + "'", int10 == 896);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 896 + "'", int11 == 896);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2003, 60, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, 0, (int) (short) 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray32, 0, 0);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray61 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray62 = new int[][] { intArray61 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 0, 1, intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, (int) (short) 1, intArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 100, intArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-3) + "'", int42 == (-3));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray43 = new int[] { '4' };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray49 = new int[] { (byte) 100, 319 };
        int[] intArray52 = new int[] { (byte) 100, 319 };
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[][] intArray59 = new int[][] { intArray49, intArray52, intArray55, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, (int) (byte) 0, 0, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, (int) (short) 1, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 30, (int) (byte) 1, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[52]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 100, 496, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, 0, (int) (short) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (short) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 1, 192, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 30 + "'", int54 == 30);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 52, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray57 = new int[][] { intArray36, intArray41, intArray46, intArray51, intArray56 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 1, 1, intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (byte) 0, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 12564, 710, intArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 10, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 100, 0, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 710 + "'", int82 == 710);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 710 + "'", int83 == 710);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, 1);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray52, 0, (int) (short) 0);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray79 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray80 = new int[][] { intArray79 };
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, 0, 1, intArray80);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (short) 1, (int) (short) 1, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, 2000, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-3) + "'", int62 == (-3));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 30 + "'", int82 == 30);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int[] intArray39 = new int[] { (byte) 100, 319 };
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[][] intArray49 = new int[][] { intArray39, intArray42, intArray45, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (byte) 0, 0, intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, (int) (short) 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 2191, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass88 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 100, 208);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[][] intArray26 = new int[][] { intArray16, intArray19, intArray22, intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (byte) 0, 0, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray51 = new int[] { '4' };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[][] intArray67 = new int[][] { intArray57, intArray60, intArray63, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, 0, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 1, intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 1, 0, intArray67);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (short) 1, (int) (short) 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12564, 52, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2191 + "'", int6 == 2191);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[52]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass21 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[][] intArray37 = new int[][] {};
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, (int) (short) 0, intArray37);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, (int) (short) 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, 0);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray73 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray74 = new int[][] { intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, 0, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (short) 1, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-1), (int) (byte) 100, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 496 + "'", int16 == 496);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-3) + "'", int60 == (-3));
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 30 + "'", int77 == 30);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass96 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 52 + "'", int92 == 52);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 52 + "'", int95 == 52);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-3), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (short) 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 12390, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass19 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (byte) -1, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4389 + "'", int8 == 4389);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 4389, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (short) 0, intArray74);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass89 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-3) + "'", int78 == (-3));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 319 + "'", int81 == 319);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 319 + "'", int82 == 319);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 319 + "'", int85 == 319);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray41 = new int[] { '4' };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, (int) (byte) 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray41, 0, (int) (byte) 0);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (short) 0, 0, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, (int) (short) 1, (int) (short) 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 496, (int) (byte) 100, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray47 = new int[][] { intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, 0, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 0, intArray77);
        int[][] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 496, 4292, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[][] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 97, intArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) -1, 192);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray49 = new int[][] { intArray28, intArray33, intArray38, intArray43, intArray48 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, 1, intArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 500, 97, intArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 4, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 4, 319, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (byte) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (byte) 0);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, (int) (short) 1, intArray59);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 1, intArray59);
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 30 + "'", int62 == 30);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass16 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-3) + "'", int15 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 1, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 52, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 2003, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass64 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-3), 28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray64, (int) (byte) 0, 0);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray64, 0, (int) (byte) 0);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray86 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray87 = new int[][] { intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, 0, 1, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (short) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 10, 353164, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray63 = new int[] { '4' };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[][] intArray79 = new int[][] { intArray69, intArray72, intArray75, intArray78 };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, 0, intArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 319, intArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[52]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray20 = new int[] { '4', 809, 710, 2191 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray27 = new int[] { (short) -1, 10, (byte) 100 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray55 = new int[] { (byte) 100, 319 };
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[][] intArray65 = new int[][] { intArray55, intArray58, intArray61, intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, 0, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, (int) (short) 1, intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 1, 0, intArray65);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, (int) (byte) 0, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 0, (-1), intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 12564 + "'", int21 == 12564);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 208 + "'", int69 == 208);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 0, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-1), 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray67 = new int[] { 100, ' ', 809, (short) 100, 4292, 4292 };
        int[] intArray74 = new int[] { 100, ' ', 809, (short) 100, 4292, 4292 };
        int[] intArray81 = new int[] { 100, ' ', 809, (short) 100, 4292, 4292 };
        int[][] intArray82 = new int[][] { intArray67, intArray74, intArray81 };
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 28, (-3), intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 32, 809, 100, 4292, 4292]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 32, 809, 100, 4292, 4292]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 32, 809, 100, 4292, 4292]");
        org.junit.Assert.assertNotNull(intArray82);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray47);
        int[] intArray57 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray63 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray64 = new int[][] { intArray57, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) ' ', 496, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 97 + "'", int65 == 97);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        java.lang.Class<?> wildcardClass66 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-3) + "'", int65 == (-3));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray66 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray66, 0, 0);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray86 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray87 = new int[][] { intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, 0, 1, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, 0, 1, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 4389, 4292, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 500 + "'", int69 == 500);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 493 + "'", int70 == 493);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 493 + "'", int71 == 493);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 493 + "'", int72 == 493);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 493 + "'", int73 == 493);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 1, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int[] intArray54 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray60 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass68 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 97 + "'", int62 == 97);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 30, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 1, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 10, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 710 + "'", int82 == 710);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 710 + "'", int83 == 710);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 710 + "'", int84 == 710);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass60 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 1, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 28, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 500, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 10, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray30 = new int[][] { intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, 1, intArray30);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, 710, intArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray40 = new int[] { (short) -1, 10, (byte) 100 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, (int) (short) 0);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, 0);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray40, 0, 1);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, 0, 0, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 4, (int) 'a', intArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-3) + "'", int50 == (-3));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-3) + "'", int56 == (-3));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 28 + "'", int59 == 28);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-3) + "'", int92 == (-3));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int[] intArray33 = new int[] { '4' };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, (int) (byte) 0, 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray33);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray33, 0, (int) (byte) 0);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray33, (int) (short) 0, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 192, (int) (short) 100, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[52]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-5), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 1, (int) (byte) 1, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass34 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2000 + "'", int29 == 2000);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2003 + "'", int33 == 2003);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (short) 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 1);
        int[] intArray47 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray47);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[][] intArray70 = new int[][] { intArray60, intArray63, intArray66, intArray69 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, 0, intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray47, (int) (byte) 0, (int) (short) 1, intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, 0, 0, intArray70);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 0, 0, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (-4), (-5), intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 28 + "'", int40 == 28);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-3) + "'", int73 == (-3));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-3) + "'", int74 == (-3));
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 100, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass40 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        int[] intArray0 = null;
        int[] intArray7 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray7);
        int[] intArray16 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[] intArray38 = new int[] { (byte) 100, 319 };
        int[][] intArray39 = new int[][] { intArray29, intArray32, intArray35, intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (byte) 0, 0, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, (int) (short) 1, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray7, (int) (short) 1, 0, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (-4), (int) (short) 1, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2000 + "'", int17 == 2000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2000 + "'", int18 == 2000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 10, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray55);
        int[] intArray65 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray71 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray72 = new int[][] { intArray65, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (byte) 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-4), 0, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 97 + "'", int73 == 97);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 2191, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 496, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 2130, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 1, (int) (byte) 1, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, 0, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2000 + "'", int23 == 2000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray17 = new int[] { (byte) 100, 319 };
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[][] intArray27 = new int[][] { intArray17, intArray20, intArray23, intArray26 };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 0, 0, intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (byte) 0, (int) (short) 1, intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray38 = new int[] { (short) -1, 10, (byte) 100 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, (int) (short) 0);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray38, 0, 0);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray68 = new int[][] { intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, 0, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 10, 60, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 100, 208);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass43 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { '4', 809, 710, 2191 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray38 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray38);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[][] intArray61 = new int[][] { intArray51, intArray54, intArray57, intArray60 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, 0, intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray38, (int) (byte) 0, (int) (short) 1, intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, 0, intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, (int) (byte) 0, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 208, 2130, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 12564 + "'", int17 == 12564);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 208 + "'", int65 == 208);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) 1, 710, 30 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray12 = new int[] { '4' };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (byte) 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (byte) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 0, intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 0, 0, intArray72);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, (int) (byte) 1, 0, intArray72);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 1, (int) (byte) 1, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 319, (-3), intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2191 + "'", int7 == 2191);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2191 + "'", int8 == 2191);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[52]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2130 + "'", int78 == 2130);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 192);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray28 = new int[] { '4' };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray37 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray38 = new int[][] { intArray37 };
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 1, intArray38);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, (int) (byte) 100, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[52]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-3) + "'", int40 == (-3));
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[][] intArray38 = new int[][] {};
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (byte) 0, (int) (short) 0, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) 10, 319, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 10, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 496, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), 208);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { 710, 896, 12564 };
        int[] intArray30 = new int[] { 710, 896, 12564 };
        int[] intArray34 = new int[] { 710, 896, 12564 };
        int[] intArray38 = new int[] { 710, 896, 12564 };
        int[][] intArray39 = new int[][] { intArray26, intArray30, intArray34, intArray38 };
        // The following exception was thrown during execution in test generation
        try {
            int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, 496, intArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[710, 896, 12564]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[710, 896, 12564]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[710, 896, 12564]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[710, 896, 12564]");
        org.junit.Assert.assertNotNull(intArray39);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { '4' };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, (int) (byte) 0, 0);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (byte) 0);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 0, 0, intArray77);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 1, 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12564, (-5), intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass88 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray50 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, (int) (short) 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, (int) (byte) 1, intArray82);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 319 + "'", int86 == 319);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 192, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray24 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[] intArray43 = new int[] { (byte) 100, 319 };
        int[] intArray46 = new int[] { (byte) 100, 319 };
        int[][] intArray47 = new int[][] { intArray37, intArray40, intArray43, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, (int) (byte) 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 1, intArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2191, (-1), intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray37 = new int[] { '4', 809, 710, 2191 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray59 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[][] intArray82 = new int[][] { intArray72, intArray75, intArray78, intArray81 };
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, 0, intArray82);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, (int) (byte) 0, (int) (short) 1, intArray82);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 1, 0, intArray82);
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, 0, (int) (byte) 0, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 10, 493, intArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 12564 + "'", int38 == 12564);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2000 + "'", int62 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 319 + "'", int84 == 319);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 208 + "'", int86 == 208);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray65 = new int[] { (short) -1, 10, (byte) 100 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray81 = new int[] { '4' };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray81);
        int[] intArray90 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray91 = new int[][] { intArray90 };
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray81, 0, 1, intArray91);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 1, (int) (byte) 1, intArray91);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (short) 0, 0, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '#', 4292, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 319 + "'", int75 == 319);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 319 + "'", int77 == 319);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[52]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 30 + "'", int93 == 30);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2000 + "'", int94 == 2000);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray10 = new int[] { '4' };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray10);
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[] intArray19 = new int[] { (byte) 100, 319 };
        int[] intArray22 = new int[] { (byte) 100, 319 };
        int[] intArray25 = new int[] { (byte) 100, 319 };
        int[][] intArray26 = new int[][] { intArray16, intArray19, intArray22, intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray10, (int) (byte) 0, 0, intArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 500, 4292, intArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[52]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray11, (int) (byte) 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray66);
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray82 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray83 = new int[][] { intArray76, intArray82 };
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray83);
        int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, 0, 1, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (byte) 100, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 97 + "'", int84 == 97);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-5) + "'", int85 == (-5));
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (short) -1, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 60, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[][] intArray41 = new int[][] {};
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 0, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) 'a', 896, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 493 + "'", int21 == 493);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 493 + "'", int22 == 493);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-3) + "'", int42 == (-3));
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, (int) (byte) 0, 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray27, 0, (int) (byte) 0);
        int[] intArray40 = new int[] { '4' };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray50 = new int[][] { intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, 0, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (short) 0, 0, intArray50);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, (int) (short) 1, intArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 66315, 0, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4389 + "'", int8 == 4389);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[52]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 30 + "'", int53 == 30);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, (int) (short) 0);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray22, 0, 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray22 = new int[] { (short) -1, 10, (byte) 100 };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, (int) (byte) 0, 0);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray35, 0, (int) (byte) 0);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, (int) (short) 1, (int) (short) 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 1, 2000, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, (int) (byte) 0, 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, 0, (int) (byte) 0);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 0, 0, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 1, (int) (short) 1, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 100, 896, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[][] intArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) 'a', intArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray23 = new int[] { '4' };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray33 = new int[][] { intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 1, intArray33);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 1, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-5), 809);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass20 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 4, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[][] intArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2000, 710, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 4389);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-5) + "'", int15 == (-5));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass51 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-3) + "'", int47 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 0, 30, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray41 = new int[] { '4', 809, 710, 2191 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { (short) -1, 10, (byte) 100 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray63 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray63);
        int[] intArray70 = new int[] { '4' };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[][] intArray86 = new int[][] { intArray76, intArray79, intArray82, intArray85 };
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, 0, intArray86);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray63, (int) (byte) 0, (int) (short) 1, intArray86);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 1, 0, intArray86);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, 0, (int) (byte) 0, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (byte) 10, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 12564 + "'", int42 == 12564);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[52]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 319 + "'", int88 == 319);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 208 + "'", int90 == 208);
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 100, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (byte) 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (byte) 0);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 0, 0, intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (short) 1, intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 0, (int) (byte) 1, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 10, 4389, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        int[] intArray5 = new int[] { (byte) 100, 2000, 500, (-5), (byte) 100 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray17, (int) (short) 0, (int) (short) 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { (short) -1, 10, (byte) 100 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray67 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray68 = new int[][] { intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, 0, 1, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 1, (int) (byte) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (short) 0, 0, intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, 0, 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 192, 12564, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 2000, 500, -5, 100]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12390 + "'", int6 == 12390);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12390 + "'", int7 == 12390);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 12390 + "'", int8 == 12390);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 12390 + "'", int9 == 12390);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-5) + "'", int22 == (-5));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 710 + "'", int26 == 710);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 710 + "'", int27 == 710);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 710 + "'", int28 == 710);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 30 + "'", int70 == 30);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-5) + "'", int72 == (-5));
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int[] intArray66 = new int[] { '4' };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray66, (int) (byte) 0, 0);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray66, 0, (int) (byte) 0);
        int[] intArray79 = new int[] { '4' };
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray79);
        int[] intArray88 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray89 = new int[][] { intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray79, 0, 1, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (short) 0, 0, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray89);
        java.lang.Class<?> wildcardClass93 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[52]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[52]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 66315, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass49 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, (int) (short) 0);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray23, 0, 1);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 319, 208, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-3) + "'", int33 == (-3));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 28 + "'", int42 == 28);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-3) + "'", int75 == (-3));
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray46, (int) (byte) 0, 0);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray46, 0, (int) (byte) 0);
        int[] intArray59 = new int[] { '4' };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray59);
        int[] intArray68 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray69 = new int[][] { intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray59, 0, 1, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (short) 0, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12564, (int) (short) 10, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[52]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 28, 896);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { '4', 809, 710, 2191 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray41 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray41);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[] intArray60 = new int[] { (byte) 100, 319 };
        int[] intArray63 = new int[] { (byte) 100, 319 };
        int[][] intArray64 = new int[][] { intArray54, intArray57, intArray60, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, (int) (byte) 0, 0, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray41, (int) (byte) 0, (int) (short) 1, intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, 0, intArray64);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 710, (-3), intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 12564 + "'", int20 == 12564);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 208 + "'", int68 == 208);
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, (int) (byte) -1, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { '4' };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, (int) (byte) 0, 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, (int) (byte) 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray40 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray40);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray56 = new int[] { '4' };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray56);
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[][] intArray72 = new int[][] { intArray62, intArray65, intArray68, intArray71 };
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray56, (int) (byte) 0, 0, intArray72);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (byte) 0, (int) (short) 1, intArray72);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray40, (int) (short) 1, 0, intArray72);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (short) 0, 0, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 319, 12390, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[52]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[52]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 319 + "'", int74 == 319);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 1);
        int[] intArray49 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[][] intArray81 = new int[][] { intArray71, intArray74, intArray77, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, 0, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, (int) (short) 1, intArray81);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, (int) (short) 1, 0, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 500, 2191, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 28 + "'", int42 == 28);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2000 + "'", int60 == 2000);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2000 + "'", int61 == 2000);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 1, (int) (byte) 1, intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray42);
        int[] intArray51 = new int[] { (short) -1, 10, (byte) 100 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray70 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray71 = new int[][] { intArray70 };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, 0, 1, intArray71);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, 0, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, 500, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2000 + "'", int25 == 2000);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2000 + "'", int26 == 2000);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-3) + "'", int73 == (-3));
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int[] intArray14 = new int[] { 52, 2003, 4389, (-5), 52 };
        int[] intArray20 = new int[] { 52, 2003, 4389, (-5), 52 };
        int[] intArray26 = new int[] { 52, 2003, 4389, (-5), 52 };
        int[] intArray32 = new int[] { 52, 2003, 4389, (-5), 52 };
        int[] intArray38 = new int[] { 52, 2003, 4389, (-5), 52 };
        int[] intArray44 = new int[] { 52, 2003, 4389, (-5), 52 };
        int[][] intArray45 = new int[][] { intArray14, intArray20, intArray26, intArray32, intArray38, intArray44 };
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 10, 896, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52, 2003, 4389, -5, 52]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52, 2003, 4389, -5, 52]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[52, 2003, 4389, -5, 52]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52, 2003, 4389, -5, 52]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[52, 2003, 4389, -5, 52]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52, 2003, 4389, -5, 52]");
        org.junit.Assert.assertNotNull(intArray45);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { (short) -1, 10, (byte) 100 };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray86 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray87 = new int[][] { intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, 0, 1, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 1, (int) (byte) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (short) 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 100, (int) (short) 100, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 319 + "'", int68 == 319);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 319 + "'", int69 == 319);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 319 + "'", int72 == 319);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 319 + "'", int73 == 319);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 30 + "'", int89 == 30);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2000 + "'", int90 == 2000);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 208, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 52, 0, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 1, (int) '4', intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 30, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 710, 2003);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        int[] intArray0 = null;
        int[] intArray8 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray8, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray8);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray28 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray29 = new int[][] { intArray28 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray8, 0, 1, intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 1, 12390, intArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 500 + "'", int11 == 500);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (int) (short) 0, 66315);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray50 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray55 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray60 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray65 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray66 = new int[][] { intArray45, intArray50, intArray55, intArray60, intArray65 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 1, 1, intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, (int) (byte) 0, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 10, 493, intArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        int[] intArray6 = new int[] { 10, (-5), (byte) 100, (short) 1, (byte) 0, 97 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, 0);
        int[] intArray34 = new int[] { '4' };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray44 = new int[][] { intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, 0, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, (int) (short) 1, intArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (-4), 2130, intArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, -5, 100, 1, 0, 97]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 896 + "'", int7 == 896);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 896 + "'", int8 == 896);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-3) + "'", int30 == (-3));
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[52]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        int[] intArray4 = new int[] { '4', 809, 710, 2191 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { '4' };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, (int) (byte) 0, 0);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (byte) 0);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (short) 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (short) 0, 0, intArray87);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, (int) (byte) 1, 0, intArray87);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, 0, 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 809, 66315, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 12564 + "'", int5 == 12564);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 12564 + "'", int6 == 12564);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 12564 + "'", int7 == 12564);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[52]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 1, 60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 319, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray19 = new int[] { '4' };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, (int) (byte) 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, (int) (byte) 0);
        int[] intArray32 = new int[] { '4' };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray41 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray42 = new int[][] { intArray41 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, 0, 1, intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 0, 0, intArray42);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (short) 1, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 10, 208, intArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[52]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[52]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray12, (int) (short) 0, (int) (short) 0);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray12);
        int[] intArray30 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray63 = new int[][] { intArray62 };
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, 0, 1, intArray63);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (byte) 1, (int) (byte) 1, intArray63);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 0, 0, intArray63);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray12, 0, 0, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 208, (int) (short) -1, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-5) + "'", int17 == (-5));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-5) + "'", int67 == (-5));
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 1, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, 0, (int) (short) 0);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, 0, 0);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray29, 0, 1);
        int[] intArray55 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray62 = new int[] { '4' };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[][] intArray78 = new int[][] { intArray68, intArray71, intArray74, intArray77 };
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, 0, intArray78);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, (int) (byte) 0, (int) (short) 1, intArray78);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 0, intArray78);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 0, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 10, (int) (byte) 100, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-3) + "'", int39 == (-3));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-3) + "'", int45 == (-3));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 28 + "'", int48 == 28);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[52]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 52 + "'", int79 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 319 + "'", int80 == 319);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-3) + "'", int81 == (-3));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-3) + "'", int82 == (-3));
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-4), 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass54 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray43 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int[] intArray54 = new int[] { '4' };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray63 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray64 = new int[][] { intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, 0, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 1, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 12390, (int) '4', intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 500 + "'", int46 == 500);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 493 + "'", int47 == 493);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 493 + "'", int48 == 493);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 493 + "'", int49 == 493);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 493 + "'", int50 == 493);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[52]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray25, 0, (int) (byte) 0);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray44 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray60 = new int[] { '4' };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray60);
        int[] intArray66 = new int[] { (byte) 100, 319 };
        int[] intArray69 = new int[] { (byte) 100, 319 };
        int[] intArray72 = new int[] { (byte) 100, 319 };
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[][] intArray76 = new int[][] { intArray66, intArray69, intArray72, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray60, (int) (byte) 0, 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, (int) (short) 1, intArray76);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (short) 1, 0, intArray76);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 0, 0, intArray76);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 1, 0, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 100, 12564, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2000 + "'", int10 == 2000);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2000 + "'", int11 == 2000);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2000 + "'", int12 == 2000);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2000 + "'", int45 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[52]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 319 + "'", int78 == 319);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 52 + "'", int80 == 52);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray15 = new int[][] {};
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, (int) (short) 0, intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray37 = new int[] { '4' };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, (int) (byte) 0, 0);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray37, 0, (int) (byte) 0);
        int[] intArray50 = new int[] { '4' };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray50);
        int[] intArray59 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray60 = new int[][] { intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray50, 0, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 0, 0, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, (int) (short) 1, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 10, (int) (short) 10, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-3) + "'", int16 == (-3));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[52]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[52]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 30 + "'", int63 == 30);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) ' ', 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray17 = new int[] { '4' };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[][] intArray33 = new int[][] { intArray23, intArray26, intArray29, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (byte) 0, 0, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray42 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray51);
        int[] intArray58 = new int[] { '4' };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray58);
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[][] intArray74 = new int[][] { intArray64, intArray67, intArray70, intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray58, (int) (byte) 0, 0, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray51, (int) (byte) 0, (int) (short) 1, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (short) 1, 0, intArray74);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, (int) (short) 0, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (-5), 0, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[52]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2000 + "'", int52 == 2000);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2000 + "'", int53 == 2000);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[52]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 319 + "'", int76 == 319);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray11 = new int[] { (short) -1, 10, (byte) 100 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray11);
        int[] intArray27 = new int[] { '4' };
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray27);
        int[] intArray36 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray37 = new int[][] { intArray36 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray27, 0, 1, intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray11, (int) (byte) 1, (int) (byte) 1, intArray37);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 0, 0, intArray37);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        java.lang.Class<?> wildcardClass45 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[52]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 30 + "'", int39 == 30);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2000 + "'", int44 == 2000);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 97, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        int[] intArray3 = new int[] { (short) 1, 710, 30 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray9 = new int[] { '4' };
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray9);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray9, (int) (byte) 1, 0, intArray69);
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, (int) (byte) 1, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (-3), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 710, 30]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2191 + "'", int4 == 2191);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2191 + "'", int5 == 2191);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[52]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2130 + "'", int75 == 2130);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, 496);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray17 = new int[] { (short) -1, 10, (byte) 100 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray17);
        int[] intArray26 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray31 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray36 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray41 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray47 = new int[][] { intArray26, intArray31, intArray36, intArray41, intArray46 };
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray17, (int) (short) 1, 1, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray47);
        int[] intArray57 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray63 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray64 = new int[][] { intArray57, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (short) 10, 28, intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 97 + "'", int65 == 97);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), 192);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        int[] intArray0 = null;
        int[][] intArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 30, 2130, intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray53 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray62 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray62);
        int[] intArray69 = new int[] { '4' };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray75 = new int[] { (byte) 100, 319 };
        int[] intArray78 = new int[] { (byte) 100, 319 };
        int[] intArray81 = new int[] { (byte) 100, 319 };
        int[] intArray84 = new int[] { (byte) 100, 319 };
        int[][] intArray85 = new int[][] { intArray75, intArray78, intArray81, intArray84 };
        int int86 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, 0, intArray85);
        int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray62, (int) (byte) 0, (int) (short) 1, intArray85);
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (short) 1, 0, intArray85);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, (int) (short) 0, intArray85);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, (int) (short) 0, intArray85);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 4389, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2000 + "'", int54 == 2000);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2000 + "'", int63 == 2000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2000 + "'", int64 == 2000);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[52]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 319 + "'", int87 == 319);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-3) + "'", int89 == (-3));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray50 = new int[][] { intArray29, intArray34, intArray39, intArray44, intArray49 };
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 1, intArray50);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray20, (int) (short) 0, (int) (short) 0);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, 0, (int) (short) 1, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, (int) (byte) 0, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 30 + "'", int51 == 30);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass17 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray19 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 493, (-3), intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 500 + "'", int22 == 500);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '4', 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (short) 0);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray36 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { '4' };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray55 = new int[][] { intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, 0, 1, intArray55);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 1, (int) (byte) 1, intArray55);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 1, (int) (byte) 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 2000, 1, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-3) + "'", int26 == (-3));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[52]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 4 + "'", int57 == 4);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray54 = new int[][] { intArray33, intArray38, intArray43, intArray48, intArray53 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (short) 1, 1, intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray24, (int) (short) 0, (int) (short) 0);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[] intArray65 = new int[] { '4' };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray65);
        int[] intArray71 = new int[] { (byte) 100, 319 };
        int[] intArray74 = new int[] { (byte) 100, 319 };
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[][] intArray81 = new int[][] { intArray71, intArray74, intArray77, intArray80 };
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray65, (int) (byte) 0, 0, intArray81);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, 0, (int) (short) 1, intArray81);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 192, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 30 + "'", int55 == 30);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 319 + "'", int61 == 319);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[52]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 319 + "'", int83 == 319);
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int64 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass68 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 319 + "'", int63 == 319);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 319 + "'", int64 == 319);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 319 + "'", int65 == 319);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 319 + "'", int66 == 319);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 319 + "'", int67 == 319);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { '4' };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, (int) (byte) 0, 0);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray18, 0, (int) (byte) 0);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray37 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray53 = new int[] { '4' };
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray53);
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[] intArray62 = new int[] { (byte) 100, 319 };
        int[] intArray65 = new int[] { (byte) 100, 319 };
        int[] intArray68 = new int[] { (byte) 100, 319 };
        int[][] intArray69 = new int[][] { intArray59, intArray62, intArray65, intArray68 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray53, (int) (byte) 0, 0, intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, (int) (byte) 0, (int) (short) 1, intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 0, intArray69);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, 0, intArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 30, 0, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[52]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2000 + "'", int39 == 2000);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[52]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 319 + "'", int71 == 319);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 30, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 66315, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (-1), 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass97 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 710 + "'", int95 == 710);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 710 + "'", int96 == 710);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray28 = new int[] { (short) -1, 10, (byte) 100 };
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray28);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 1);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray28, 0, 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (short) -1, (int) (short) 100, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 28 + "'", int62 == 28);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-3) + "'", int96 == (-3));
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int[] intArray24 = new int[] { (short) -1, 10, (byte) 100 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray24);
        int[][] intArray36 = new int[][] {};
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray24, (int) (byte) 0, (int) (short) 0, intArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) -1, 496, intArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-3) + "'", int18 == (-3));
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray24 = new int[][] { intArray23 };
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 1, intArray24);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray24);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass36 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (byte) 1);
        int[] intArray52 = new int[] { (short) -1, 10, (byte) 100 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray67 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray67);
        int[] intArray74 = new int[] { '4' };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray74);
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[][] intArray90 = new int[][] { intArray80, intArray83, intArray86, intArray89 };
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray74, (int) (byte) 0, 0, intArray90);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray67, (int) (byte) 0, (int) (short) 1, intArray90);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, 1, 0, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2000, 28, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2000 + "'", int43 == 2000);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2003 + "'", int46 == 2003);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[52]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 52 + "'", int75 == 52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 319 + "'", int92 == 319);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 192, 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray23 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray46 = new int[] { '4' };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray56 = new int[][] { intArray55 };
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 0, 1, intArray56);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (byte) 1, (int) (byte) 1, intArray56);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 0, 0, intArray56);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 0, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 10, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2000 + "'", int24 == 2000);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[52]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 30 + "'", int58 == 30);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-5) + "'", int60 == (-5));
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray19 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray19, 0, 0);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { '4' };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray40 = new int[][] { intArray39 };
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 0, 1, intArray40);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, 0, 1, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 60, 28, intArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 710 + "'", int8 == 710);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 710 + "'", int9 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 710 + "'", int10 == 710);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 500 + "'", int22 == 500);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 493 + "'", int23 == 493);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 493 + "'", int24 == 493);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[52]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        int[] intArray0 = null;
        int[] intArray6 = new int[] { (short) -1, 10, (byte) 100 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray15 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray20 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray25 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray30 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray35 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray36 = new int[][] { intArray15, intArray20, intArray25, intArray30, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 1, 1, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray54 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray61 = new int[] { '4' };
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray61);
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[] intArray70 = new int[] { (byte) 100, 319 };
        int[] intArray73 = new int[] { (byte) 100, 319 };
        int[] intArray76 = new int[] { (byte) 100, 319 };
        int[][] intArray77 = new int[][] { intArray67, intArray70, intArray73, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray61, (int) (byte) 0, 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (short) 1, 0, intArray77);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, (int) (short) 0, (int) (short) 0, intArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, (int) (byte) 1, (int) (short) 1, intArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 30 + "'", int37 == 30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2000 + "'", int55 == 2000);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2000 + "'", int56 == 2000);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2000 + "'", int57 == 2000);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[52]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 319 + "'", int79 == 319);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-3) + "'", int81 == (-3));
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, 100, 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { (short) -1, 10, (byte) 100 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray34 = new int[] { (short) -1, 10, (byte) 100 };
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray34);
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray63 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray64 = new int[][] { intArray43, intArray48, intArray53, intArray58, intArray63 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray34, (int) (short) 1, 1, intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, (int) (short) 1, (int) (byte) 0, intArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, (int) 'a', intArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 30 + "'", int65 == 30);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, 0);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, (int) (short) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, 496, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray42 = new int[] { '4', 809, 710, 2191 };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray49 = new int[] { (short) -1, 10, (byte) 100 };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray64 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray71 = new int[] { '4' };
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray71);
        int[] intArray77 = new int[] { (byte) 100, 319 };
        int[] intArray80 = new int[] { (byte) 100, 319 };
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[][] intArray87 = new int[][] { intArray77, intArray80, intArray83, intArray86 };
        int int88 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray71, (int) (byte) 0, 0, intArray87);
        int int89 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, (int) (byte) 0, (int) (short) 1, intArray87);
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 1, 0, intArray87);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, (int) (byte) 0, intArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 100, 319, intArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 12564 + "'", int43 == 12564);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2000 + "'", int65 == 2000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2000 + "'", int66 == 2000);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[52]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 319 + "'", int89 == 319);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 208 + "'", int91 == 208);
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 4);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 0);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 100, 710);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 710 + "'", int13 == 710);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-5) + "'", int20 == (-5));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (byte) 0, 1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 496 + "'", int14 == 496);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray18 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray25 = new int[] { '4' };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray31 = new int[] { (byte) 100, 319 };
        int[] intArray34 = new int[] { (byte) 100, 319 };
        int[] intArray37 = new int[] { (byte) 100, 319 };
        int[] intArray40 = new int[] { (byte) 100, 319 };
        int[][] intArray41 = new int[][] { intArray31, intArray34, intArray37, intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (byte) 0, 0, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (byte) 0, (int) (short) 1, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 1, 0, intArray41);
        int[][] intArray47 = null;
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray47);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass53 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2000 + "'", int19 == 2000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2000 + "'", int20 == 2000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[52]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-3) + "'", int48 == (-3));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int[] intArray44 = new int[] { (short) -1, 10, (byte) 100 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, (int) (short) 0);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, 0);
        int int63 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray44, 0, 1);
        int[] intArray70 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray70);
        int[] intArray77 = new int[] { '4' };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray77);
        int[] intArray83 = new int[] { (byte) 100, 319 };
        int[] intArray86 = new int[] { (byte) 100, 319 };
        int[] intArray89 = new int[] { (byte) 100, 319 };
        int[] intArray92 = new int[] { (byte) 100, 319 };
        int[][] intArray93 = new int[][] { intArray83, intArray86, intArray89, intArray92 };
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray77, (int) (byte) 0, 0, intArray93);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray70, (int) (byte) 0, (int) (short) 1, intArray93);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, 0, 0, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 2000, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-3) + "'", int60 == (-3));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 28 + "'", int63 == 28);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2000 + "'", int73 == 2000);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[52]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 319 + "'", int95 == 319);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-3) + "'", int96 == (-3));
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray13 = new int[] { '4' };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray22 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray23 = new int[][] { intArray22 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, 0, 1, intArray23);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (byte) 0, 0, intArray23);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray36 = new int[] { 353164, 192, 2003 };
        int[] intArray40 = new int[] { 353164, 192, 2003 };
        int[] intArray44 = new int[] { 353164, 192, 2003 };
        int[] intArray48 = new int[] { 353164, 192, 2003 };
        int[] intArray52 = new int[] { 353164, 192, 2003 };
        int[][] intArray53 = new int[][] { intArray36, intArray40, intArray44, intArray48, intArray52 };
        // The following exception was thrown during execution in test generation
        try {
            int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 496, intArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[52]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[353164, 192, 2003]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[353164, 192, 2003]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[353164, 192, 2003]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[353164, 192, 2003]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[353164, 192, 2003]");
        org.junit.Assert.assertNotNull(intArray53);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 4, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass13 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray25 = new int[] { (short) -1, 10, (byte) 100 };
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray25);
        int[] intArray34 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray55 = new int[][] { intArray34, intArray39, intArray44, intArray49, intArray54 };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray25, (int) (short) 1, 1, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (-1), 192, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 30 + "'", int56 == 30);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, (int) (byte) 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray16, 0, (int) (byte) 0);
        int[] intArray29 = new int[] { '4' };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray39 = new int[][] { intArray38 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, 0, 1, intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (short) 0, 0, intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (short) 1, intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 319 + "'", int11 == 319);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[52]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 30 + "'", int42 == 30);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) ' ', 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-5) + "'", int19 == (-5));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray16 = new int[] { (short) -1, 10, (byte) 100 };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[][] intArray28 = new int[][] {};
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, (int) (byte) 0, (int) (short) 0, intArray28);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) 'a', 30, intArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-3) + "'", int29 == (-3));
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (byte) 0, (int) (byte) 0);
        int[] intArray14 = new int[] { '4' };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray20 = new int[] { (byte) 100, 319 };
        int[] intArray23 = new int[] { (byte) 100, 319 };
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[][] intArray30 = new int[][] { intArray20, intArray23, intArray26, intArray29 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (byte) 0, 0, intArray30);
        int[] intArray37 = new int[] { (short) -1, 10, (byte) 100 };
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray37);
        int[] intArray46 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray51 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray56 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray61 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray66 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray67 = new int[][] { intArray46, intArray51, intArray56, intArray61, intArray66 };
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray37, (int) (short) 1, 1, intArray67);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 0, 0, intArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) '4', 2000, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-3) + "'", int10 == (-3));
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[52]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 208, 4292);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, (int) (short) 1);
        int[] intArray19 = new int[] { (short) -1, 10, (byte) 100 };
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray19);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray39 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray44 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray49 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray54 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray59 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray60 = new int[][] { intArray39, intArray44, intArray49, intArray54, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, (int) (short) 1, 1, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray60);
        int[] intArray70 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray76 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray77 = new int[][] { intArray70, intArray76 };
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray19, (int) (short) 1, (int) (byte) 0, intArray77);
        int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (int) (short) 1, intArray77);
        int int80 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int81 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int82 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int83 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int84 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 30 + "'", int61 == 30);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 97 + "'", int78 == 97);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-5) + "'", int79 == (-5));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 710 + "'", int80 == 710);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 710 + "'", int81 == 710);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 710 + "'", int82 == 710);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 710 + "'", int83 == 710);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 710 + "'", int84 == 710);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass18 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray26 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray35 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[] intArray54 = new int[] { (byte) 100, 319 };
        int[] intArray57 = new int[] { (byte) 100, 319 };
        int[][] intArray58 = new int[][] { intArray48, intArray51, intArray54, intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, (int) (byte) 0, 0, intArray58);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, (int) (byte) 0, (int) (short) 1, intArray58);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, (int) (short) 1, 0, intArray58);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 1, (int) (short) 0, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2000 + "'", int27 == 2000);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2000 + "'", int28 == 2000);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2000 + "'", int36 == 2000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2000 + "'", int37 == 2000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2000 + "'", int38 == 2000);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 100, 319);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        int[] intArray6 = new int[] { 710, (byte) 0, 12564, (byte) 10, 710, 896 };
        int[] intArray14 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, (int) (short) 0, (int) (short) 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray32 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray39 = new int[] { (short) -1, 10, (byte) 100 };
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray39);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray65 = new int[][] { intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, 0, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray39, (int) (byte) 1, (int) (byte) 1, intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (short) 0, 0, intArray65);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 0, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray6, 12564, 353164, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[710, 0, 12564, 10, 710, 896]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-5) + "'", int19 == (-5));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 710 + "'", int20 == 710);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 710 + "'", int21 == 710);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 710 + "'", int22 == 710);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 710 + "'", int23 == 710);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 710 + "'", int24 == 710);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 710 + "'", int25 == 710);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2000 + "'", int33 == 2000);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 30 + "'", int67 == 30);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-5) + "'", int69 == (-5));
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray14, 0, (int) (short) 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray32 = new int[] { (short) -1, 10, (byte) 100 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray32);
        int[] intArray42 = new int[] { '4' };
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray42);
        int[] intArray51 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray52 = new int[][] { intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray42, 0, 1, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray32, (int) (byte) 0, 0, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, 0, 4, intArray52);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 2000, (-5), intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2000 + "'", int7 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2000 + "'", int8 == 2000);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-3) + "'", int24 == (-3));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[52]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-3) + "'", int54 == (-3));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) 'a', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray22 = new int[] { '4' };
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray22);
        int[] intArray31 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray32 = new int[][] { intArray31 };
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray22, 0, 1, intArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 100, (int) (short) -1, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[52]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, 0, (int) (short) 1);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray15 = new int[] { (short) -1, 10, (byte) 100 };
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, (int) (short) 0);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray15);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray15, 0, 0);
        int[] intArray35 = new int[] { '4' };
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray35);
        int[] intArray44 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray45 = new int[][] { intArray44 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray35, 0, 1, intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray15, (int) (byte) 0, (int) (short) 1, intArray45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 896, (int) (byte) 1, intArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2003 + "'", int8 == 2003);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2000 + "'", int9 == 2000);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 319 + "'", int17 == 319);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 319 + "'", int18 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-3) + "'", int31 == (-3));
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[52]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) 'a', 2191);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', 12390);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 319 + "'", int53 == 319);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray44 = new int[] { '4' };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray44);
        int[] intArray50 = new int[] { (byte) 100, 319 };
        int[] intArray53 = new int[] { (byte) 100, 319 };
        int[] intArray56 = new int[] { (byte) 100, 319 };
        int[] intArray59 = new int[] { (byte) 100, 319 };
        int[][] intArray60 = new int[][] { intArray50, intArray53, intArray56, intArray59 };
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray44, (int) (byte) 0, 0, intArray60);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, (int) (short) 1, intArray60);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[52]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 319 + "'", int62 == 319);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray21, 0, 0);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray43 = new int[] { (short) -1, 10, (byte) 100 };
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, (int) (short) 0);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray43);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 0);
        int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray43, 0, 1);
        int[] intArray69 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray69);
        int[] intArray76 = new int[] { '4' };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray76);
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[] intArray91 = new int[] { (byte) 100, 319 };
        int[][] intArray92 = new int[][] { intArray82, intArray85, intArray88, intArray91 };
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray76, (int) (byte) 0, 0, intArray92);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray69, (int) (byte) 0, (int) (short) 1, intArray92);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray43, 0, 0, intArray92);
        int int96 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, (int) (short) 0, intArray92);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) ' ', 100, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-3) + "'", int11 == (-3));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 319 + "'", int12 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 319 + "'", int13 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 500 + "'", int24 == 500);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 493 + "'", int25 == 493);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 493 + "'", int26 == 493);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 493 + "'", int27 == 493);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 493 + "'", int28 == 493);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 493 + "'", int31 == 493);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 493 + "'", int32 == 493);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 493 + "'", int33 == 493);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 493 + "'", int34 == 493);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 493 + "'", int35 == 493);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 493 + "'", int36 == 493);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 493 + "'", int37 == 493);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-3) + "'", int53 == (-3));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-3) + "'", int59 == (-3));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 28 + "'", int62 == 28);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2000 + "'", int70 == 2000);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2000 + "'", int71 == 2000);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2000 + "'", int72 == 2000);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[52]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-3) + "'", int95 == (-3));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 500 + "'", int96 == 500);
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray16 = new int[] { '4' };
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray16);
        int[] intArray25 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray26 = new int[][] { intArray25 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray16, 0, 1, intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, 1, intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray36 = new int[] { (short) -1, 10, (byte) 100 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray36, 0, (int) (short) 0);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray54 = new int[] { (short) -1, 10, (byte) 100 };
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray54);
        int[] intArray64 = new int[] { '4' };
        int int65 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray64);
        int[] intArray73 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray74 = new int[][] { intArray73 };
        int int75 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray64, 0, 1, intArray74);
        int int76 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray54, (int) (byte) 0, 0, intArray74);
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 4, intArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 0, (-5), intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[52]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 493 + "'", int29 == 493);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 493 + "'", int30 == 493);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-3) + "'", int46 == (-3));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 319 + "'", int55 == 319);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 319 + "'", int57 == 319);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 319 + "'", int58 == 319);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 319 + "'", int59 == 319);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 319 + "'", int60 == 319);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[52]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-3) + "'", int76 == (-3));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 60, 809);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray21 = new int[] { (short) -1, 10, (byte) 100 };
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray21);
        int[] intArray31 = new int[] { '4' };
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray31);
        int[] intArray40 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray41 = new int[][] { intArray40 };
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray31, 0, 1, intArray41);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray21, (int) (byte) 0, 0, intArray41);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 4, intArray41);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        java.lang.Class<?> wildcardClass48 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[52]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-3) + "'", int43 == (-3));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        int[] intArray4 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { '4' };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray26 = new int[] { (byte) 100, 319 };
        int[] intArray29 = new int[] { (byte) 100, 319 };
        int[] intArray32 = new int[] { (byte) 100, 319 };
        int[] intArray35 = new int[] { (byte) 100, 319 };
        int[][] intArray36 = new int[][] { intArray26, intArray29, intArray32, intArray35 };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 0, 0, intArray36);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (byte) 0, (int) (short) 1, intArray36);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, (int) (short) 1, 0, intArray36);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 100, 12564);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2000 + "'", int5 == 2000);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2000 + "'", int6 == 2000);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2000 + "'", int15 == 2000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2000 + "'", int16 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[52]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2000 + "'", int40 == 2000);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2000 + "'", int41 == 2000);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2000 + "'", int42 == 2000);
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        int[] intArray0 = null;
        int[] intArray4 = new int[] { '4' };
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray4, (int) (byte) 0, 0);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray4);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray29 = new int[] { (short) -1, 10, (byte) 100 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray48 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray53 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray58 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray59 = new int[][] { intArray38, intArray43, intArray48, intArray53, intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (short) 1, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray59);
        int[] intArray69 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[] intArray75 = new int[] { 'a', (-5), 500, 710, (short) 10 };
        int[][] intArray76 = new int[][] { intArray69, intArray75 };
        int int77 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, (int) (byte) 0, intArray76);
        int int78 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray4, 0, 1, intArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray0, 1, 0, intArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[52]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 30 + "'", int60 == 30);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[97, -5, 500, 710, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 97 + "'", int77 == 97);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-5) + "'", int78 == (-5));
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        int[] intArray6 = new int[] { ' ', 30, 493, (byte) 0, 319, (byte) 1 };
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray6, 52, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 30, 493, 0, 319, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4389 + "'", int7 == 4389);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4389 + "'", int8 == 4389);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (short) 10, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        int[] intArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray0, (-4), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray18 = new int[] { (short) -1, 10, (byte) 100 };
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray37 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray42 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray47 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray48 = new int[][] { intArray27, intArray32, intArray37, intArray42, intArray47 };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 1, 1, intArray48);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray18);
        int[] intArray57 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray57);
        int[] intArray66 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray66);
        int[] intArray73 = new int[] { '4' };
        int int74 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray73);
        int[] intArray79 = new int[] { (byte) 100, 319 };
        int[] intArray82 = new int[] { (byte) 100, 319 };
        int[] intArray85 = new int[] { (byte) 100, 319 };
        int[] intArray88 = new int[] { (byte) 100, 319 };
        int[][] intArray89 = new int[][] { intArray79, intArray82, intArray85, intArray88 };
        int int90 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray73, (int) (byte) 0, 0, intArray89);
        int int91 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray66, (int) (byte) 0, (int) (short) 1, intArray89);
        int int92 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray57, (int) (short) 1, 0, intArray89);
        int int93 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray18, (int) (short) 0, (int) (short) 0, intArray89);
        int int94 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, (int) (byte) 0, 1, intArray89);
        int int95 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (-3), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 710 + "'", int11 == 710);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 710 + "'", int12 == 710);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 319 + "'", int19 == 319);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 30 + "'", int49 == 30);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2000 + "'", int58 == 2000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2000 + "'", int59 == 2000);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2000 + "'", int67 == 2000);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2000 + "'", int68 == 2000);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2000 + "'", int69 == 2000);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[52]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 52 + "'", int90 == 52);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 319 + "'", int91 == 319);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-3) + "'", int93 == (-3));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 319 + "'", int94 == 319);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 710 + "'", int95 == 710);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        int[] intArray5 = new int[] { (short) 100, (short) -1, (byte) 0, (-1), (short) -1 };
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (short) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int[] intArray46 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray46);
        int[] intArray55 = new int[] { '4' };
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray55);
        int[] intArray64 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray65 = new int[][] { intArray64 };
        int int66 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray55, 0, 1, intArray65);
        int int67 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray46, 1, (int) (byte) 1, intArray65);
        int int68 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 1, (int) (byte) 1, intArray65);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray5, 710, 66315, intArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, -1, 0, -1, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 500 + "'", int8 == 500);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 493 + "'", int9 == 493);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 493 + "'", int10 == 493);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 493 + "'", int11 == 493);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 493 + "'", int12 == 493);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 493 + "'", int13 == 493);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 493 + "'", int14 == 493);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 493 + "'", int15 == 493);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 493 + "'", int16 == 493);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 493 + "'", int17 == 493);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 493 + "'", int18 == 493);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 493 + "'", int19 == 493);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 493 + "'", int20 == 493);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2000 + "'", int50 == 2000);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2000 + "'", int51 == 2000);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[52]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 30 + "'", int68 == 30);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray14 = new int[] { (short) -1, 10, (byte) 100 };
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray14);
        int[] intArray23 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray28 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray33 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray38 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray43 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray44 = new int[][] { intArray23, intArray28, intArray33, intArray38, intArray43 };
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray14, (int) (short) 1, 1, intArray44);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, (int) (byte) 0, intArray44);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int51 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int52 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[][] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 2130, 2003, intArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 30 + "'", int45 == 30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 319 + "'", int47 == 319);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 319 + "'", int48 == 319);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 319 + "'", int49 == 319);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 319 + "'", int50 == 319);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 319 + "'", int51 == 319);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 319 + "'", int52 == 319);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int43 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray48 = new int[] { '4' };
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray48);
        int[] intArray57 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray58 = new int[][] { intArray57 };
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray48, 0, 1, intArray58);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 710, 60, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 319 + "'", int42 == 319);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 319 + "'", int43 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 319 + "'", int44 == 319);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[52]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray7 = new int[] { (byte) 100, 319 };
        int[] intArray10 = new int[] { (byte) 100, 319 };
        int[] intArray13 = new int[] { (byte) 100, 319 };
        int[] intArray16 = new int[] { (byte) 100, 319 };
        int[][] intArray17 = new int[][] { intArray7, intArray10, intArray13, intArray16 };
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) 0, 0, intArray17);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 192, 493);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int20 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray26 = new int[] { (short) -1, 10, (byte) 100 };
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, (int) (short) 0);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray26);
        int int42 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, 0);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray26, 0, 1);
        int[] intArray49 = new int[] { '4' };
        int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray49);
        int[] intArray58 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray59 = new int[][] { intArray58 };
        int int60 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray49, 0, 1, intArray59);
        int int61 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray26, 0, 1, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (-1), 353164, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 319 + "'", int20 == 319);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-3) + "'", int42 == (-3));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 28 + "'", int45 == 28);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[52]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, (int) (byte) 0, 0);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray1, 0, (int) (byte) 0);
        int int11 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray20 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (short) 1, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (short) 0, 0, intArray52);
        int int57 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int58 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        java.lang.Class<?> wildcardClass60 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2000 + "'", int21 == 2000);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2000 + "'", int22 == 2000);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int8 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int9 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, (int) (short) 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 0);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int[] intArray29 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray29);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray42 = new int[] { (byte) 100, 319 };
        int[] intArray45 = new int[] { (byte) 100, 319 };
        int[] intArray48 = new int[] { (byte) 100, 319 };
        int[] intArray51 = new int[] { (byte) 100, 319 };
        int[][] intArray52 = new int[][] { intArray42, intArray45, intArray48, intArray51 };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, (int) (byte) 0, 0, intArray52);
        int int54 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray29, (int) (byte) 0, (int) (short) 1, intArray52);
        int int55 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, 0, 0, intArray52);
        int int56 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 493, 2000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 319 + "'", int6 == 319);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 319 + "'", int7 == 319);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 319 + "'", int8 == 319);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 319 + "'", int9 == 319);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 319 + "'", int10 == 319);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-3) + "'", int13 == (-3));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 319 + "'", int14 == 319);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 319 + "'", int15 == 319);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 319 + "'", int16 == 319);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-3) + "'", int19 == (-3));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 28 + "'", int22 == 28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2000 + "'", int30 == 2000);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2000 + "'", int31 == 2000);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2000 + "'", int32 == 2000);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 319 + "'", int54 == 319);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-3) + "'", int55 == (-3));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 319 + "'", int56 == 319);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        int[] intArray3 = new int[] { (short) -1, 10, (byte) 100 };
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int[] intArray12 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray17 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray22 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray27 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[] intArray32 = new int[] { (short) 100, (byte) 1, (byte) 10, '#' };
        int[][] intArray33 = new int[][] { intArray12, intArray17, intArray22, intArray27, intArray32 };
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray3, (int) (short) 1, 1, intArray33);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, (int) (short) 0, (int) (short) 0);
        int int39 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int40 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int41 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int44 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 0, 1);
        int int45 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray3);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray3, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 319 + "'", int4 == 319);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 319 + "'", int5 == 319);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[100, 1, 10, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 30 + "'", int34 == 30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-3) + "'", int38 == (-3));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 319 + "'", int39 == 319);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 319 + "'", int40 == 319);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 319 + "'", int41 == 319);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 28 + "'", int44 == 28);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 319 + "'", int45 == 319);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 319 + "'", int46 == 319);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray10 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray11 = new int[][] { intArray10 };
        int int12 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 0, 1, intArray11);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray23 = new int[] { '4', 809, 710, 2191 };
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray23);
        int[] intArray30 = new int[] { (short) -1, 10, (byte) 100 };
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int33 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int34 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int35 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int36 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int int38 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray30);
        int[] intArray45 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int46 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray45);
        int[] intArray52 = new int[] { '4' };
        int int53 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray52);
        int[] intArray58 = new int[] { (byte) 100, 319 };
        int[] intArray61 = new int[] { (byte) 100, 319 };
        int[] intArray64 = new int[] { (byte) 100, 319 };
        int[] intArray67 = new int[] { (byte) 100, 319 };
        int[][] intArray68 = new int[][] { intArray58, intArray61, intArray64, intArray67 };
        int int69 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray52, (int) (byte) 0, 0, intArray68);
        int int70 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray45, (int) (byte) 0, (int) (short) 1, intArray68);
        int int71 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray30, 1, 0, intArray68);
        int int72 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray23, 0, (int) (byte) 0, intArray68);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, (int) (byte) -1, (int) (byte) 0, intArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[52, 809, 710, 2191]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 12564 + "'", int24 == 12564);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 319 + "'", int33 == 319);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 319 + "'", int34 == 319);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 319 + "'", int35 == 319);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 319 + "'", int36 == 319);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 319 + "'", int37 == 319);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 319 + "'", int38 == 319);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2000 + "'", int46 == 2000);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2000 + "'", int47 == 2000);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2000 + "'", int48 == 2000);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[52]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[100, 319]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 319 + "'", int70 == 319);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 208 + "'", int72 == 208);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        int[] intArray1 = new int[] { '4' };
        int int2 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int3 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int4 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int5 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray1);
        int[] intArray13 = new int[] { 500, (byte) 1, (byte) -1, (short) -1 };
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray13);
        int[] intArray20 = new int[] { (short) -1, 10, (byte) 100 };
        int int21 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int22 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int23 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int24 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int25 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int26 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int27 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int28 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int29 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int30 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int31 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int int32 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray20);
        int[] intArray36 = new int[] { '4' };
        int int37 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray36);
        int[] intArray45 = new int[] { (short) 1, (short) 10, (short) 100, '4', (-1) };
        int[][] intArray46 = new int[][] { intArray45 };
        int int47 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray36, 0, 1, intArray46);
        int int48 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray20, (int) (byte) 1, (int) (byte) 1, intArray46);
        int int49 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray13, (int) (short) 0, 0, intArray46);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = com.thealgorithms.dynamicprogramming.WineProblem.WPTD(intArray1, 66315, 2130, intArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[52]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[500, 1, -1, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2000 + "'", int14 == 2000);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 10, 100]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 319 + "'", int21 == 319);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 319 + "'", int22 == 319);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 319 + "'", int23 == 319);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 319 + "'", int24 == 319);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 319 + "'", int25 == 319);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 319 + "'", int26 == 319);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 319 + "'", int27 == 319);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 319 + "'", int28 == 319);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 319 + "'", int29 == 319);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 319 + "'", int30 == 319);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 319 + "'", int31 == 319);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 319 + "'", int32 == 319);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[52]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1, 10, 100, 52, -1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 30 + "'", int48 == 30);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2000 + "'", int49 == 2000);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        int[] intArray5 = new int[] { (-1), 0, (short) 100, '4', (short) 1 };
        int int6 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int7 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int10 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, (int) (short) 0, (int) (short) 0);
        int int13 = com.thealgorithms.dynamicprogramming.WineProblem.WPRecursion(intArray5, 0, 0);
        int int14 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int15 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int16 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int17 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int18 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        int int19 = com.thealgorithms.dynamicprogramming.WineProblem.WPBU(intArray5);
        java.lang.Class<?> wildcardClass20 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 100, 52, 1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 710 + "'", int6 == 710);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 710 + "'", int7 == 710);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-5) + "'", int10 == (-5));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-5) + "'", int13 == (-5));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 710 + "'", int14 == 710);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 710 + "'", int15 == 710);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 710 + "'", int16 == 710);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 710 + "'", int17 == 710);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 710 + "'", int18 == 710);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 710 + "'", int19 == 710);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }
}

